;; Object slime-20160614.1114/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "slime-20160614.1114/"
  :tables
  (list
    (semanticdb-table "slime.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include (:directory "lib/cl-lib") nil [2619 2649])
            ("cl-lib" include nil nil [2549 2572])
            ("cl" include nil nil [2671 2684])
            ("if" code nil nil [2730 2825])
            ("hyperspec" include (:directory "lib/hyperspec") nil [2828 2864])
            ("thingatpt" include nil nil [2865 2885])
            ("comint" include nil nil [2886 2903])
            ("pp" include nil nil [2904 2917])
            ("easymenu" include nil nil [2918 2937])
            ("outline" include nil nil [2938 2956])
            ("arc-mode" include nil nil [2957 2976])
            ("etags" include nil nil [2977 2993])
            ("compile" include nil nil [2994 3012])
            ("lisp-mnt" include nil nil [3073 3092])
            ("gud" include nil nil [3056 3070])
            ("apropos" include nil nil [3035 3053])
            ("declare-function" code nil nil [3095 3135])
            ("slime-path" variable nil nil [3137 3357])
            ("setq" code nil nil [3358 3412])
            ("slime-version" variable nil nil [3414 3484])
            ("setq" code nil nil [3485 3875])
            ("slime-lisp-modes" variable (:default-value (quote (lisp-mode))) nil [3877 3915])
            ("slime-contribs" variable nil nil [3916 3994])
            ("define-obsolete-variable-alias" code nil nil [3995 4073])
            ("slime-setup" function
               (:user-visible-flag t
                :arguments ("contribs"))
                nil [4075 4450])
            ("slime-required-modules" variable (:default-value (quote nil)) nil [4452 4487])
            ("slime--setup-contribs" function nil nil [4489 4895])
            ("slime-lisp-mode-hook" function nil nil [4897 5033])
            ("slime-protocol-version" variable nil nil [5035 5070])
            ("setq" code nil nil [5071 5114])
            ("slime" customgroup (:user-visible-flag t) nil [5156 5270])
            ("slime-ui" customgroup (:user-visible-flag t) nil [5288 5398])
            ("slime-truncate-lines" variable (:default-value t) nil [5400 5623])
            ("slime-kill-without-query-p" variable nil nil [5625 5847])
            ("slime-lisp" customgroup (:user-visible-flag t) nil [5867 5958])
            ("slime-backend" variable (:default-value "swank-loader.lisp") nil [5960 6220])
            ("slime-connected-hook" variable nil nil [6222 6352])
            ("slime-enable-evaluate-in-emacs" variable (:user-visible-flag t) nil [6354 6574])
            ("slime-lisp-host" variable (:default-value "127.0.0.1") nil [6576 6708])
            ("slime-port" variable (:default-value 4005) nil [6710 6827])
            ("slime-connect-host-history" variable (:default-value (list slime-lisp-host)) nil [6829 6887])
            ("slime-connect-port-history" variable (:default-value (list (prin1-to-string slime-port))) nil [6888 6959])
            ("slime-net-valid-coding-systems" variable (:default-value (quote ((iso-latin-1-unix nil "iso-latin-1-unix") (iso-8859-1-unix nil "iso-latin-1-unix") (binary nil "iso-latin-1-unix") (utf-8-unix t "utf-8-unix") (emacs-mule-unix t "emacs-mule-unix") (euc-jp-unix t "euc-jp-unix")))) nil [6961 7356])
            ("slime-find-coding-system" function (:arguments ("name")) nil [7358 7778])
            ("slime-net-coding-system" variable (:default-value (car (cl-find-if (quote slime-find-coding-system) slime-net-valid-coding-systems :key (quote car)))) nil [7780 8192])
            ("slime-mode" customgroup (:user-visible-flag t) nil [8212 8321])
            ("slime-find-definitions-function" variable (:default-value (quote slime-find-definitions-rpc)) nil [8323 8952])
            ("slime-complete-symbol-function" variable (:default-value (quote nil)) nil [8979 9243])
            ("make-obsolete-variable" code nil nil [9245 9399])
            ("slime-completion-at-point-functions" variable (:default-value (quote (slime-filename-completion slime-simple-completion-at-point))) nil [9401 9675])
            ("slime-mode-faces" customgroup (:user-visible-flag t) nil [9701 9817])
            ("slime-error-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline "red")) (((class color) (background dark)) (:underline "red")) (t (:underline t))))
                :type "face")
                nil [9819 10064])
            ("slime-warning-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline "orange")) (((class color) (background dark)) (:underline "coral")) (t (:underline t))))
                :type "face")
                nil [10066 10320])
            ("slime-style-warning-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline "brown")) (((class color) (background dark)) (:underline "gold")) (t (:underline t))))
                :type "face")
                nil [10322 10586])
            ("slime-note-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline "brown4")) (((class color) (background dark)) (:underline "light goldenrod")) (t (:underline t))))
                :type "face")
                nil [10588 10846])
            ("slime-highlight-face" variable
               (:default-value (quote ((t (:inherit highlight :underline nil))))
                :type "face")
                nil [10848 10996])
            ("slime-debugger" customgroup (:user-visible-flag t) nil [11010 11114])
            ("define-sldb-faces" function (:arguments ("faces")) nil [11116 11521])
            ("define-sldb-face" function (:arguments ("name" "description" "default")) nil [11523 11791])
            ("define-sldb-faces" code nil nil [11793 12939])
            ("slime-mode-indirect-map" variable (:default-value (make-sparse-keymap)) nil [12979 13197])
            ("slime-buffer-connection" variable nil nil [13199 13231])
            ("slime-dispatching-connection" variable nil nil [13232 13269])
            ("slime-current-thread" variable nil nil [13270 13299])
            ("slime--on" function nil nil [13301 13348])
            ("slime--off" function nil nil [13350 13449])
            ("define-minor-mode" code nil nil [13451 14923])
            ("slime-modeline-string" function nil nil [14944 15837])
            ("slime-pretty-package-name" function (:arguments ("name")) nil [15839 16104])
            ("slime-modeline-state-string" function (:arguments ("conn")) nil [16106 16587])
            ("slime--recompute-modelines" function nil nil [16589 16655])
            ("slime-parent-map" variable nil nil [16679 16770])
            ("slime-parent-bindings" variable (:default-value (quote (("\256" slime-edit-definition) ("\254" slime-pop-find-definition-stack) ("\337" slime-edit-uses) ("\277" slime-edit-uses) ("4." slime-edit-definition-other-window) ("5." slime-edit-definition-other-frame) ("" slime-eval-last-expression) ("\230" slime-eval-defun) ("" slime-prefix-map)))) nil [16772 17250])
            ("slime-prefix-map" variable nil nil [17252 17339])
            ("slime-prefix-bindings" variable (:default-value (quote (("" slime-eval-region) (":" slime-interactive-eval) ("" slime-interactive-eval) ("E" slime-edit-value) ("" slime-load-file) ("" slime-interrupt) ("\344" slime-disassemble-symbol) ("" slime-toggle-trace-fdefinition) ("I" slime-inspect) ("t" slime-list-threads) ("n" slime-next-connection) ("p" slime-prev-connection) ("c" slime-list-connections) ("<" slime-list-callers) (">" slime-list-callees) ("" slime-doc-map) ("" slime-who-map)))) nil [17341 18013])
            ("slime-editing-map" variable nil nil [18015 18165])
            ("slime-editing-keys" variable (:default-value (\` ((" " slime-space) ("" slime-pprint-eval-last-expression) ("" slime-expand-1) ("\355" slime-macroexpand-all) ("" slime-undefine-function) ((\, (kbd "C-M-.")) slime-next-location) ((\, (kbd "C-M-,")) slime-previous-location) ("	" completion-at-point)))) nil [18167 18770])
            ("slime-mode-map" variable nil nil [18772 18826])
            ("slime-keys" variable (:default-value (quote (("\360" slime-previous-note) ("\356" slime-next-note) ("\343" slime-remove-notes) ("" slime-compile-and-load-file) ("\353" slime-compile-file) ("" slime-compile-defun)))) nil [18828 19107])
            ("slime-nop" function (:user-visible-flag t) nil [19109 19246])
            ("slime-doc-map" variable nil nil [19248 19336])
            ("slime-doc-bindings" variable (:default-value (quote ((97 slime-apropos) (122 slime-apropos-all) (112 slime-apropos-package) (100 slime-describe-symbol) (102 slime-describe-function) (104 slime-documentation-lookup) (126 common-lisp-hyperspec-format) (103 common-lisp-hyperspec-glossary-term) (35 common-lisp-hyperspec-lookup-reader-macro)))) nil [19338 19681])
            ("slime-who-map" variable nil nil [19683 19766])
            ("slime-who-bindings" variable (:default-value (quote ((99 slime-who-calls) (119 slime-calls-who) (114 slime-who-references) (98 slime-who-binds) (115 slime-who-sets) (109 slime-who-macroexpands) (97 slime-who-specializes)))) nil [19768 19988])
            ("slime-init-keymaps" function (:user-visible-flag t) nil [19990 20640])
            ("slime-init-keymap" function (:arguments ("keymap-name" "prefixp" "bothp" "bindings")) nil [20642 20852])
            ("slime-bind-keys" function (:arguments ("keymap" "bothp" "bindings")) nil [20854 21298])
            ("slime-init-keymaps" code nil nil [21300 21320])
            ("define-minor-mode" code nil nil [21322 21470])
            ("slime-dcase" function (:arguments ("value" "patterns")) nil [21717 22888])
            ("slime-define-keys" function (:arguments ("keymap" "key-command")) nil [22890 23126])
            ("cl-defmacro" code nil nil [23128 23935])
            ("slime-message-function" variable (:default-value (quote message)) nil [23973 24013])
            ("slime-buffer-name" function (:arguments ("type" "hidden")) nil [24028 24202])
            ("slime-message" function (:arguments ("format" "args")) nil [24217 24412])
            ("slime-display-warning" function (:arguments ("message" "args")) nil [24414 24531])
            ("slime-background-message-function" variable (:default-value (quote slime-display-oneliner)) nil [24533 24599])
            ("slime-background-message" function (:arguments ("format-string" "format-args")) nil [24614 24975])
            ("slime-display-oneliner" function (:arguments ("format-string" "format-args")) nil [24977 25206])
            ("slime-oneliner" function (:arguments ("string")) nil [25208 25492])
            ("slime-set-truncate-lines" function nil nil [25507 25678])
            ("slime-read-package-name" function (:arguments ("prompt" "initial-value")) nil [25693 26055])
            ("slime-read-symbol-name" function (:arguments ("prompt" "query")) nil [26070 26471])
            ("slime-propertize-region" function (:arguments ("props" "body")) nil [26486 26892])
            ("slime-add-face" function (:arguments ("face" "string")) nil [26894 27029])
            ("slime-insert-propertized" function (:arguments ("props" "args")) nil [27044 27220])
            ("slime-with-rigid-indentation" function (:arguments ("level" "body")) nil [27222 27598])
            ("slime-indent-rigidly" function (:arguments ("start" "end" "column")) nil [27600 27987])
            ("slime-insert-indented" function (:arguments ("strings")) nil [27989 28143])
            ("slime-property-bounds" function (:arguments ("prop")) nil [28145 28463])
            ("slime-curry" function (:arguments ("fun" "args")) nil [28465 28669])
            ("slime-rcurry" function (:arguments ("fun" "args")) nil [28671 28826])
            ("slime-buffer-package" variable nil nil [28884 28913])
            ("slime-buffer-connection" variable nil nil [28914 28946])
            ("cl-defmacro" code nil nil [28961 30582])
            ("slime-popup-buffer-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "q") (quote quit-window)) (define-key map (kbd "M-.") (quote slime-edit-definition)) map)) nil [30584 30816])
            ("define-minor-mode" code nil nil [30818 30943])
            ("add-to-list" code nil nil [30945 31107])
            ("set-keymap-parent" code nil nil [31109 31173])
            ("slime-to-lisp-filename-function" variable (:default-value (function convert-standard-filename)) nil [31414 31543])
            ("slime-from-lisp-filename-function" variable (:default-value (function identity)) nil [31544 31658])
            ("slime-to-lisp-filename" function (:arguments ("filename")) nil [31660 31808])
            ("slime-from-lisp-filename" function (:arguments ("filename")) nil [31810 31971])
            ("inferior-lisp-program" variable
               (:user-visible-flag t
                :default-value "lisp")
                nil [32230 32344])
            ("slime-lisp-implementations" variable (:user-visible-flag t) nil [32346 32803])
            ("slime-default-lisp" variable (:user-visible-flag t) nil [32805 32919])
            ("slime-net-processes" variable nil nil [32959 32987])
            ("slime-default-connection" variable nil nil [32988 33021])
            ("slime" function
               (:user-visible-flag t
                :arguments ("command" "coding-system"))
                nil [33023 33490])
            ("slime-inferior-lisp-program-history" variable (:default-value (quote nil)) nil [33492 33595])
            ("slime-read-interactive-args" function nil nil [33597 35379])
            ("slime-lisp-options" function (:arguments ("name")) nil [35381 35912])
            ("slime-lookup-lisp-implementation" function (:arguments ("table" "name")) nil [35914 36395])
            ("cl-defun" code nil nil [36397 38150])
            ("slime-start*" function (:arguments ("options")) nil [38152 38214])
            ("slime-connect" function
               (:user-visible-flag t
                :arguments ("host" "port" "_coding-system" "interactive-p"))
                nil [38216 39125])
            ("slime-start-and-init" function (:arguments ("options" "fun")) nil [39153 39427])
            ("slime-connect-retry-timer" variable nil nil [40151 40251])
            ("slime-bytecode-stale-p" function nil nil [40280 40687])
            ("slime-recompile-bytecode" function (:user-visible-flag t) nil [40689 40927])
            ("slime-urge-bytecode-recompile" function nil nil [40929 41173])
            ("slime-abort-connection" function (:user-visible-flag t) nil [41175 41446])
            ("slime-maybe-start-lisp" function (:arguments ("program" "program-args" "env" "directory" "buffer")) nil [41499 42215])
            ("slime-reinitialize-inferior-lisp-p" function (:arguments ("program" "program-args" "env" "buffer")) nil [42217 42588])
            ("slime-inferior-process-start-hook" variable nil nil [42590 42689])
            ("slime-start-lisp" function (:arguments ("program" "program-args" "env" "directory" "buffer")) nil [42691 43345])
            ("slime-inferior-connect" function (:arguments ("process" "args")) nil [43347 43573])
            ("slime-inferior-lisp-args" variable nil nil [43575 43685])
            ("slime-start-swank-server" function (:arguments ("process" "args")) nil [43687 44198])
            ("slime-inferior-lisp-args" function (:arguments ("process")) nil [44200 44381])
            ("slime-init-command" function (:arguments ("port-filename" "_coding-system")) nil [44463 45116])
            ("slime-swank-port-file" function nil nil [45118 45290])
            ("slime-temp-directory" function nil nil [45292 45467])
            ("slime-delete-swank-port-file" function (:arguments ("quiet")) nil [45469 45800])
            ("slime-read-port-and-connect" function (:arguments ("inferior-process")) nil [45802 45908])
            ("slime-attempt-connection" function (:arguments ("process" "retries" "attempt")) nil [45910 47567])
            ("slime-timer-call" function (:arguments ("fun" "args")) nil [47569 47882])
            ("slime-cancel-connect-retry-timer" function nil nil [47884 48048])
            ("slime-read-swank-port" function nil nil [48050 48373])
            ("slime-toggle-debug-on-swank-error" function nil nil [48375 48587])
            ("slime-user-first-name" function nil nil [48617 48842])
            ("slime-words-of-encouragement" variable (:default-value (\` ("Let the hacking commence!" "Hacks and glory await!" "Hack and be merry!" "Your hacking starts... NOW!" "May the source be with you!" "Take this REPL, brother, and may it serve you well." "Lemonodor-fame is but a hack away!" (\, (format "%s, this could be the start of a beautiful program." (slime-user-first-name)))))) nil [48844 49308])
            ("slime-random-words-of-encouragement" function nil nil [49310 49508])
            ("slime-net-processes" variable nil nil [50078 50162])
            ("slime-net-process-close-hooks" variable (:default-value (quote nil)) nil [50164 50336])
            ("slime-secret" function nil nil [50338 50696])
            ("slime-net-connect" function (:arguments ("host" "port")) nil [50712 51361])
            ("slime-make-net-buffer" function (:arguments ("name")) nil [51363 51634])
            ("slime-set-query-on-exit-flag" function (:arguments ("process")) nil [51636 52017])
            ("slime-check-coding-system" function
               (:user-visible-flag t
                :arguments ("coding-system"))
                nil [52048 52527])
            ("slime-coding-system-mulibyte-p" function (:arguments ("coding-system")) nil [52529 52638])
            ("slime-coding-system-cl-name" function (:arguments ("coding-system")) nil [52640 52745])
            ("slime-net-send" function (:arguments ("sexp" "proc")) nil [52761 53231])
            ("slime-safe-encoding-p" function (:arguments ("coding-system" "string")) nil [53233 53653])
            ("slime-net-close" function (:arguments ("process" "debug")) nil [53655 54185])
            ("slime-net-sentinel" function (:arguments ("process" "message")) nil [54187 54321])
            ("slime-net-filter" function (:arguments ("process" "string")) nil [54459 54708])
            ("slime-process-available-input" function (:arguments ("process")) nil [54710 55245])
            ("slime-net-have-input-p" function nil nil [55247 55445])
            ("slime-run-when-idle" function (:arguments ("function" "args")) nil [55447 55584])
            ("slime-handle-net-read-error" function (:arguments ("error")) nil [55586 56070])
            ("slime-net-read-or-lose" function (:arguments ("process")) nil [56072 56245])
            ("slime-net-read" function nil nil [56247 56881])
            ("slime-net-decode-length" function nil nil [56883 57016])
            ("slime-net-encode-length" function (:arguments ("n")) nil [57018 57073])
            ("slime-prin1-to-string" function (:arguments ("sexp")) nil [57075 57357])
            ("slime-dispatching-connection" variable nil nil [59441 59655])
            ("make-variable-buffer-local" code nil nil [59657 59820])
            ("slime-default-connection" variable nil nil [59822 60021])
            ("slime-current-connection" function nil nil [60023 60247])
            ("slime-connection" function nil nil [60249 60779])
            ("define-obsolete-variable-alias" code nil nil [60781 60857])
            ("slime-auto-start" variable (:default-value (quote never)) nil [60858 61145])
            ("slime-auto-start" function nil nil [61147 61504])
            ("slime-auto-select-connection" variable (:default-value (quote ask)) nil [61506 61734])
            ("slime-auto-select-connection" function nil nil [61736 62282])
            ("slime-select-connection" function (:arguments ("process")) nil [62284 62408])
            ("slime-cycle-connections-hook" variable nil nil [62410 62451])
            ("slime-cycle-connections-within" function (:arguments ("connections")) nil [62453 62865])
            ("slime-next-connection" function (:user-visible-flag t) nil [62867 63050])
            ("define-obsolete-function-alias" code nil nil [63052 63141])
            ("slime-prev-connection" function (:user-visible-flag t) nil [63143 63376])
            ("cl-defmacro" code nil nil [63378 63768])
            ("slime-def-connection-var" function (:arguments ("varname" "initial-value-and-doc")) nil [63803 64754])
            ("slime-def-connection-var" code nil nil [64756 64887])
            ("slime-def-connection-var" code nil nil [64889 65028])
            ("slime-def-connection-var" code nil nil [65030 65116])
            ("slime-def-connection-var" code nil nil [65118 65198])
            ("slime-def-connection-var" code nil nil [65200 65310])
            ("slime-def-connection-var" code nil nil [65312 65425])
            ("slime-def-connection-var" code nil nil [65427 65536])
            ("slime-def-connection-var" code nil nil [65538 65666])
            ("slime-def-connection-var" code nil nil [65668 65755])
            ("slime-def-connection-var" code nil nil [65757 65862])
            ("slime-def-connection-var" code nil nil [65864 65949])
            ("slime-def-connection-var" code nil nil [65951 66067])
            ("slime-def-connection-var" code nil nil [66069 66181])
            ("slime-connection-counter" variable nil nil [66207 66315])
            ("slime-setup-connection" function (:arguments ("process")) nil [66331 66550])
            ("slime-init-connection-state" function (:arguments ("proc")) nil [66552 67373])
            ("slime-set-connection-info" function (:arguments ("connection" "info")) nil [67375 69191])
            ("slime-check-version" function (:arguments ("version" "conn")) nil [69193 69509])
            ("slime-generate-connection-name" function (:arguments ("lisp-name")) nil [69511 69810])
            ("slime-connection-close-hook" function (:arguments ("process")) nil [69812 70139])
            ("add-hook" code nil nil [70141 70211])
            ("slime-disconnect" function (:user-visible-flag t) nil [70244 70360])
            ("slime-disconnect-all" function (:user-visible-flag t) nil [70362 70488])
            ("slime-connection-port" function (:arguments ("connection")) nil [70490 70619])
            ("slime-process" function (:arguments ("connection")) nil [70621 70938])
            ("slime-set-inferior-process" function (:arguments ("connection" "process")) nil [70995 71103])
            ("slime-use-sigint-for-interrupt" function (:arguments ("connection")) nil [71105 71316])
            ("slime-inhibit-pipelining" variable
               (:user-visible-flag t
                :default-value t)
                nil [71318 71423])
            ("slime-background-activities-enabled-p" function nil nil [71425 71662])
            ("make-variable-buffer-local" code nil nil [73448 73672])
            ("make-variable-buffer-local" code nil nil [73674 73851])
            ("cl-defmacro" code nil nil [74052 75494])
            ("slime-current-package" function nil nil [75510 75814])
            ("slime-find-buffer-package-function" variable
               (:user-visible-flag t
                :default-value (quote slime-search-buffer-package))
                nil [75816 76032])
            ("slime-find-buffer-package" function nil nil [76034 76190])
            ("make-variable-buffer-local" code nil nil [76192 76309])
            ("slime-search-buffer-package" function nil nil [76519 76870])
            ("slime-stack-eval-tags" variable nil nil [77117 77213])
            ("slime-eval" function (:arguments ("sexp" "package")) nil [77215 78282])
            ("slime-eval-async" function (:arguments ("sexp" "cont" "package")) nil [78284 78957])
            ("slime-connected-p" function nil nil [78998 79110])
            ("slime-check-connected" function nil nil [79112 79332])
            ("slime-debugged-connection-p" function (:arguments ("conn")) nil [79344 79720])
            ("slime-busy-p" function (:arguments ("conn")) nil [79722 80058])
            ("slime-sync" function nil nil [80060 80326])
            ("slime-ping" function (:user-visible-flag t) nil [80328 80438])
            ("slime-def-connection-var" code nil nil [80887 81008])
            ("slime-def-connection-var" code nil nil [81010 81105])
            ("slime-event-hooks" variable nil nil [81107 81133])
            ("slime-dispatch-event" function (:arguments ("event" "process")) nil [81135 85208])
            ("slime-send" function (:arguments ("sexp")) nil [85210 85342])
            ("slime-reset" function (:user-visible-flag t) nil [85344 85579])
            ("slime-send-sigint" function nil nil [85581 85664])
            ("slime-def-connection-var" code nil nil [86117 86200])
            ("slime-def-connection-var" code nil nil [86202 86288])
            ("cl-defstruct" code nil nil [86290 86496])
            ("slime-make-channel" function (:arguments ("operations" "name")) nil [86498 86710])
            ("slime-close-channel" function (:arguments ("channel")) nil [86712 87005])
            ("slime-find-channel" function (:arguments ("id")) nil [87007 87073])
            ("slime-channel-send" function (:arguments ("channel" "message")) nil [87075 87292])
            ("slime-channel-put" function (:arguments ("channel" "prop" "value")) nil [87294 87440])
            ("slime-channel-get" function (:arguments ("channel" "prop")) nil [87442 87531])
            ("slime-channel-method-table-name" function (:arguments ("type")) nil [87553 87653])
            ("slime-define-channel-type" function (:arguments ("name")) nil [87656 87861])
            ("slime-define-channel-method" function (:arguments ("type" "method" "args" "body")) nil [87863 88159])
            ("slime-send-to-remote-channel" function (:arguments ("channel-id" "msg")) nil [88161 88279])
            ("slime-log-events" variable
               (:user-visible-flag t
                :default-value t)
                nil [88525 88607])
            ("slime-outline-mode-in-events-buffer" variable (:user-visible-flag t) nil [88609 88712])
            ("slime-event-buffer-name" variable (:default-value (slime-buffer-name :events)) nil [88714 88814])
            ("slime-log-event" function (:arguments ("event")) nil [88816 89378])
            ("slime-pprint-event" function (:arguments ("event" "buffer")) nil [89380 89575])
            ("slime-events-buffer" function nil nil [89577 90101])
            ("slime-restart-inferior-lisp" function (:user-visible-flag t) nil [90133 90372])
            ("slime-restart-sentinel" function (:arguments ("process" "_message")) nil [90374 91148])
            ("slime-highlight-compiler-notes" variable
               (:user-visible-flag t
                :default-value t)
                nil [91216 91320])
            ("slime-before-compile-functions" variable nil nil [91322 91531])
            ("slime-compilation-finished-hook" variable (:default-value (quote slime-maybe-show-compilation-log)) nil [91570 92043])
            ("slime-compilation-policy" variable nil nil [92153 92249])
            ("slime-compute-policy" function (:arguments ("arg")) nil [92251 92773])
            ("cl-defstruct" code nil nil [92775 93006])
            ("slime-last-compilation-result" variable nil nil [93008 93106])
            ("slime-compiler-notes" function nil nil [93108 93257])
            ("slime-compile-and-load-file" function
               (:user-visible-flag t
                :arguments ("policy"))
                nil [93259 93960])
            ("slime-compile-file-options" variable (:default-value (quote nil)) nil [93962 94203])
            ("slime-compile-file" function
               (:user-visible-flag t
                :arguments ("load" "policy"))
                nil [94205 95042])
            ("slime--maybe-save-buffer" function nil nil [95112 95328])
            ("slime-hack-quotes" function (:arguments ("arglist")) nil [95330 95475])
            ("slime-simplify-plist" function (:arguments ("plist")) nil [95477 95643])
            ("slime-compile-defun" function
               (:user-visible-flag t
                :arguments ("raw-prefix-arg"))
                nil [95645 96235])
            ("slime-compile-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [96237 96640])
            ("slime-flash-region" function (:arguments ("start" "end" "timeout")) nil [96642 96914])
            ("slime-compile-string" function (:arguments ("string" "start-offset")) nil [96916 97454])
            ("slime-load-failed-fasl" variable (:default-value (quote ask)) nil [97456 97720])
            ("slime-load-failed-fasl-p" function nil nil [97722 97892])
            ("slime-compilation-finished" function (:arguments ("result")) nil [97894 98571])
            ("slime-show-note-counts" function (:arguments ("notes" "secs" "successp")) nil [98573 99350])
            ("slime-highlight-notes" function
               (:user-visible-flag t
                :arguments ("notes"))
                nil [99352 99774])
            ("slime-note-overlays" variable (:default-value (quote nil)) nil [99776 99866])
            ("slime-remove-old-overlays" function nil nil [99868 100022])
            ("slime-filter-buffers" function (:arguments ("predicate")) nil [100024 100330])
            ("slime-recompile-location" function (:arguments ("location")) nil [100455 100585])
            ("slime-recompile-locations" function (:arguments ("locations" "cont")) nil [100587 101376])
            ("slime-merge-notes-for-display" function (:arguments ("notes")) nil [101441 101722])
            ("slime-merge-notes" function (:arguments ("notes")) nil [101724 102201])
            ("slime-notes-in-same-location-p" function (:arguments ("a" "b")) nil [102203 102305])
            ("slime-one-line-ify" function (:arguments ("string")) nil [102336 102652])
            ("slime-xrefs-for-notes" function (:arguments ("notes")) nil [102654 103232])
            ("slime-maybe-show-xrefs-for-notes" function (:arguments ("notes")) nil [103234 103547])
            ("slime-note-has-location-p" function (:arguments ("note")) nil [103549 103643])
            ("slime-redefinition-note-p" function (:arguments ("note")) nil [103645 103733])
            ("slime-create-compilation-log" function (:arguments ("notes")) nil [103735 104020])
            ("slime-maybe-show-compilation-log" function (:arguments ("notes")) nil [104022 104584])
            ("slime-show-compilation-log" function
               (:user-visible-flag t
                :arguments ("notes"))
                nil [104586 104881])
            ("slime-insert-compilation-log" function (:arguments ("notes")) nil [104883 105851])
            ("slime-insert-note-group" function (:arguments ("notes")) nil [105853 106256])
            ("slime-indent-block" function (:arguments ("start" "column")) nil [106258 106518])
            ("slime-canonicalized-location" function (:arguments ("location")) nil [106520 107011])
            ("slime-canonicalized-location-to-string" function (:arguments ("loc")) nil [107013 107459])
            ("slime-goto-note-in-compilation-log" function (:arguments ("note")) nil [107461 108077])
            ("slime-group-and-sort-notes" function (:arguments ("notes")) nil [108079 109298])
            ("slime-note.severity" function (:arguments ("note")) nil [109300 109363])
            ("slime-note.message" function (:arguments ("note")) nil [109365 109426])
            ("slime-note.source-context" function (:arguments ("note")) nil [109428 109503])
            ("slime-note.location" function (:arguments ("note")) nil [109505 109568])
            ("slime-severity-label" function (:arguments ("severity")) nil [109570 109648])
            ("slime-overlay-note" function (:arguments ("note")) nil [109689 110356])
            ("slime-make-note-overlay" function (:arguments ("note" "start" "end")) nil [110358 110545])
            ("slime-create-note-overlay" function (:arguments ("note" "start" "end" "severity" "message")) nil [110547 111358])
            ("slime-merge-note-into-overlay" function (:arguments ("overlay" "severity" "message")) nil [111559 112084])
            ("slime-choose-overlay-region" function (:arguments ("note")) nil [112086 112878])
            ("slime-choose-overlay-for-read-error" function (:arguments ("location")) nil [112880 113231])
            ("slime-choose-overlay-for-sexp" function (:arguments ("location")) nil [113233 113660])
            ("slime-same-line-p" function (:arguments ("pos1" "pos2")) nil [113662 113874])
            ("slime-severity-face-plist" variable (:default-value (quote (:error slime-error-face :read-error slime-error-face :warning slime-warning-face :redefinition slime-style-warning-face :style-warning slime-style-warning-face :note slime-note-face))) nil [113876 114219])
            ("slime-severity-face" function (:arguments ("severity")) nil [114221 114419])
            ("slime-severity-order" variable (:default-value (quote (:note :style-warning :redefinition :warning :error :read-error))) nil [114421 114518])
            ("slime-severity<" function (:arguments ("sev1" "sev2")) nil [114520 114696])
            ("slime-most-severe" function (:arguments ("sev1" "sev2")) nil [114698 114827])
            ("slime-visit-source-path" function (:arguments ("source-path")) nil [114853 115025])
            ("slime-forward-positioned-source-path" function (:arguments ("source-path")) nil [115027 115458])
            ("slime-forward-source-path" function (:arguments ("source-path")) nil [115460 115886])
            ("slime-filesystem-toplevel-directory" function nil nil [115990 116277])
            ("slime-file-name-merge-source-root" function (:arguments ("target-filename" "buffer-filename")) nil [116279 118609])
            ("slime-highlight-differences-in-dirname" function (:arguments ("base-dirname" "contrast-dirname")) nil [118611 119697])
            ("slime-warn-when-possibly-tricked-by-M-." variable (:default-value t) nil [119699 120706])
            ("slime-maybe-warn-for-different-source-root" function (:arguments ("target-filename" "buffer-filename")) nil [120708 121460])
            ("slime-check-location-filename-sanity" function (:arguments ("filename")) nil [121462 121936])
            ("slime-check-location-buffer-name-sanity" function (:arguments ("buffer-name")) nil [121938 122087])
            ("slime-goto-location-buffer" function (:arguments ("buffer")) nil [122092 123296])
            ("slime-goto-location-position" function (:arguments ("position")) nil [123298 124587])
            ("slime-eol-conversion-fixup" function (:arguments ("n")) nil [124589 125065])
            ("slime-search-method-location" function (:arguments ("name" "specializers" "qualifiers")) nil [125067 126489])
            ("slime-search-call-site" function (:arguments ("fname")) nil [126491 126979])
            ("slime-search-edit-path" function (:arguments ("edit-path")) nil [126981 127248])
            ("slime-goto-source-location" function (:arguments ("location" "noerror")) nil [127250 128514])
            ("slime-location-offset" function (:arguments ("location")) nil [128516 129142])
            ("slime-isearch" function (:arguments ("string")) nil [129380 130283])
            ("slime-isearch-with-function" function (:arguments ("search-fn" "string")) nil [130285 131209])
            ("slime-next-note" function (:user-visible-flag t) nil [131275 131541])
            ("slime-previous-note" function (:user-visible-flag t) nil [131543 131825])
            ("slime-goto-first-note" function (:arguments ("_")) nil [131827 132079])
            ("slime-remove-notes" function (:user-visible-flag t) nil [132081 132218])
            ("slime-show-note" function (:arguments ("overlay")) nil [132220 132626])
            ("slime-temporarily-highlight-note" function (:arguments ("overlay")) nil [132670 133133])
            ("slime-note-at-point" function nil nil [133170 133350])
            ("slime-note-overlay-p" function (:arguments ("overlay")) nil [133352 133481])
            ("slime-note-overlays-at-point" function nil nil [133483 133652])
            ("slime-find-next-note" function nil nil [133654 133882])
            ("slime-find-previous-note" function nil nil [133884 134114])
            ("slime-space" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [134140 134404])
            ("put" code nil nil [134406 134444])
            ("slime-echo-arglist" function nil nil [134478 134851])
            ("slime-operator-before-point-function" variable (:default-value (quote slime-lisp-operator-before-point)) nil [134853 134932])
            ("slime-operator-before-point" function nil nil [134934 135021])
            ("slime-lisp-operator-before-point" function nil nil [135023 135182])
            ("defalias" code nil nil [135311 135366])
            ("make-obsolete" code nil nil [135367 135440])
            ("slime--completion-at-point" function nil nil [135770 135992])
            ("slime-setup-completion" function nil nil [135994 136106])
            ("slime-simple-completion-at-point" function nil nil [136108 136382])
            ("slime-filename-completion" function nil nil [136384 136811])
            ("slime-simple-complete-symbol" function nil nil [136919 137136])
            ("slime-indent-and-complete-symbol" function (:user-visible-flag t) nil [137321 137965])
            ("make-obsolete" code nil nil [137967 138097])
            ("slime-minibuffer-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "	" (function completion-at-point)) (define-key map "\211" (function completion-at-point)) map)) nil [138099 138376])
            ("slime-minibuffer-history" variable (:default-value (quote nil)) nil [138378 138473])
            ("slime-minibuffer-setup-hook" function nil nil [138475 138871])
            ("slime-read-from-minibuffer" function (:arguments ("prompt" "initial-value" "history")) nil [138873 139331])
            ("slime-bogus-completion-alist" function (:arguments ("list")) nil [139333 139607])
            ("slime-simple-completions" function (:arguments ("prefix")) nil [139609 139908])
            ("slime-push-definition-stack" function nil nil [139934 140082])
            ("slime-pop-find-definition-stack" function (:user-visible-flag t) nil [140084 140216])
            ("cl-defstruct" code nil nil [140218 140300])
            ("cl-defstruct" code nil nil [140302 140496])
            ("slime-location-p" function (:arguments ("o")) nil [140498 140565])
            ("slime-xref-has-location-p" function (:arguments ("xref")) nil [140567 140655])
            ("make-slime-buffer-location" function (:arguments ("buffer-name" "position" "hints")) nil [140657 140835])
            ("make-slime-file-location" function (:arguments ("file-name" "position" "hints")) nil [140837 141007])
            ("slime-edit-definition-hooks" variable nil nil [141237 141273])
            ("slime-edit-definition" function
               (:user-visible-flag t
                :arguments ("name" "where"))
                nil [141275 142019])
            ("slime-edit-definition-cont" function (:arguments ("xrefs" "name" "where")) nil [142021 142700])
            ("slime-edit-uses-xrefs" variable (:default-value (quote (:calls :macroexpands :binds :references :sets :specializes))) nil [142702 142796])
            ("slime-edit-uses" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [142911 143743])
            ("slime-analyze-xrefs" function (:arguments ("xrefs")) nil [143745 144297])
            ("slime-xref-group" function (:arguments ("xref")) nil [144299 144895])
            ("slime-pop-to-location" function (:arguments ("location" "where")) nil [144897 145192])
            ("slime-postprocess-xref" function (:arguments ("original-xref")) nil [145194 146209])
            ("slime-postprocess-xrefs" function (:arguments ("xrefs")) nil [146211 146295])
            ("slime-find-definitions" function (:arguments ("name")) nil [146297 146440])
            ("slime-find-definitions-rpc" function (:arguments ("name")) nil [146442 146540])
            ("slime-edit-definition-other-window" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [146542 146754])
            ("slime-edit-definition-other-frame" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [146756 146966])
            ("slime-edit-definition-with-etags" function (:arguments ("name")) nil [146968 147306])
            ("slime-etags-to-locations" function (:arguments ("name")) nil [147308 148125])
            ("slime-etags-definitions" function (:arguments ("name")) nil [148127 148461])
            ("slime-first-change-hook" function nil nil [148488 149053])
            ("slime-setup-first-change-hook" function nil nil [149055 149186])
            ("add-hook" code nil nil [149188 149246])
            ("slime-lisp-readable-p" function (:arguments ("x")) nil [149270 149580])
            ("slime-eval-for-lisp" function (:arguments ("thread" "tag" "form-string")) nil [149582 150529])
            ("slime-check-eval-in-emacs-enabled" function nil nil [150531 150828])
            ("slime-ed-frame" variable nil nil [150843 150904])
            ("slime-ed-use-dedicated-frame" variable
               (:user-visible-flag t
                :default-value t)
                nil [150906 151057])
            ("slime-ed" function (:arguments ("what")) nil [151059 151911])
            ("slime-goto-line" function (:arguments ("line-number")) nil [151913 152276])
            ("slime-y-or-n-p" function (:arguments ("thread" "tag" "question")) nil [152278 152398])
            ("slime-read-from-minibuffer-for-swank" function (:arguments ("thread" "tag" "prompt" "initial-value")) nil [152400 152682])
            ("slime-interactive-eval" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [152715 153168])
            ("slime-transcript-start-hook" variable nil nil [153170 153250])
            ("slime-transcript-stop-hook" variable nil nil [153251 153332])
            ("slime-display-eval-result" function (:arguments ("value")) nil [153334 153404])
            ("slime-eval-with-transcript" function (:arguments ("form")) nil [153406 153787])
            ("slime-eval-print" function (:arguments ("string")) nil [153789 154073])
            ("slime-eval-save" function (:arguments ("string")) nil [154075 154452])
            ("slime-eval-describe" function (:arguments ("form")) nil [154454 154683])
            ("slime-description-autofocus" variable nil nil [154685 154779])
            ("slime-show-description" function (:arguments ("string" "package")) nil [154781 155315])
            ("slime-last-expression" function nil nil [155317 155439])
            ("slime-eval-last-expression" function (:user-visible-flag t) nil [155441 155590])
            ("slime-eval-defun" function (:user-visible-flag t) nil [155592 155923])
            ("slime-eval-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [155925 156119])
            ("slime-pprint-eval-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [156121 156333])
            ("slime-eval-buffer" function (:user-visible-flag t) nil [156335 156497])
            ("slime-re-evaluate-defvar" function
               (:user-visible-flag t
                :arguments ("form"))
                nil [156499 156775])
            ("slime-pprint-eval-last-expression" function (:user-visible-flag t) nil [156777 156973])
            ("slime-eval-print-last-expression" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [156975 157183])
            ("slime-edit-value" function
               (:user-visible-flag t
                :arguments ("form-string"))
                nil [157210 157857])
            ("make-variable-buffer-local" code nil nil [157859 157974])
            ("define-minor-mode" code nil nil [157976 158118])
            ("slime-edit-value-callback" function (:arguments ("form-string" "current-value" "package")) nil [158120 158922])
            ("slime-edit-value-commit" function (:user-visible-flag t) nil [158924 159483])
            ("slime-untrace-all" function (:user-visible-flag t) nil [159500 159607])
            ("slime-toggle-trace-fdefinition" function
               (:user-visible-flag t
                :arguments ("spec"))
                nil [159609 159848])
            ("slime-disassemble-symbol" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [159853 160084])
            ("slime-undefine-function" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [160086 160347])
            ("slime-unintern-symbol" function
               (:user-visible-flag t
                :arguments ("symbol-name" "package"))
                nil [160349 160772])
            ("slime-delete-package" function
               (:user-visible-flag t
                :arguments ("package-name"))
                nil [160774 161103])
            ("slime-load-file" function
               (:user-visible-flag t
                :arguments ("filename"))
                nil [161105 161539])
            ("slime-change-directory-hooks" variable nil nil [161541 161684])
            ("slime-change-directory" function (:arguments ("directory")) nil [161686 162109])
            ("slime-cd" function
               (:user-visible-flag t
                :arguments ("directory"))
                nil [162111 162384])
            ("slime-pwd" function (:user-visible-flag t) nil [162386 162524])
            ("slime-toggle-profile-fdefinition" function
               (:user-visible-flag t
                :arguments ("fname-string"))
                nil [162544 162879])
            ("slime-unprofile-all" function (:user-visible-flag t) nil [162881 163034])
            ("slime-profile-report" function (:user-visible-flag t) nil [163036 163164])
            ("slime-profile-reset" function (:user-visible-flag t) nil [163166 163331])
            ("slime-profiled-functions" function (:user-visible-flag t) nil [163333 163525])
            ("slime-profile-package" function
               (:user-visible-flag t
                :arguments ("package" "callers" "methods"))
                nil [163527 164101])
            ("slime-profile-by-substring" function
               (:user-visible-flag t
                :arguments ("substring" "package"))
                nil [164103 164675])
            ("slime-documentation-lookup-function" variable (:default-value (quote slime-hyperspec-lookup)) nil [164698 164768])
            ("slime-documentation-lookup" function (:user-visible-flag t) nil [164770 164950])
            ("slime-hyperspec-lookup" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [164952 165176])
            ("slime-describe-symbol" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [165178 165442])
            ("slime-documentation" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [165444 165752])
            ("slime-describe-function" function (:arguments ("symbol-name")) nil [165754 165999])
            ("slime-apropos-symbol" variable
               (:default-value (quote ((t (:inherit bold))))
                :type "face")
                nil [166001 166120])
            ("slime-apropos-label" variable
               (:default-value (quote ((t (:inherit italic))))
                :type "face")
                nil [166122 166261])
            ("slime-apropos-summary" function (:arguments ("string" "case-sensitive-p" "package" "only-external-p")) nil [166263 166638])
            ("slime-apropos" function
               (:user-visible-flag t
                :arguments ("string" "only-external-p" "package" "case-sensitive-p"))
                nil [166640 167641])
            ("slime-apropos-all" function (:user-visible-flag t) nil [167643 167795])
            ("slime-apropos-package" function
               (:user-visible-flag t
                :arguments ("package" "internal"))
                nil [167797 168183])
            ("apropos-mode" function (:prototype-flag t) nil [168185 168219])
            ("slime-show-apropos" function (:arguments ("plists" "string" "package" "summary")) nil [168220 168784])
            ("slime-apropos-namespaces" variable (:default-value (quote ((:variable "Variable") (:function "Function") (:generic-function "Generic Function") (:macro "Macro") (:special-operator "Special Operator") (:setf "Setf") (:type "Type") (:class "Class") (:alien-type "Alien type") (:alien-struct "Alien struct") (:alien-union "Alien type") (:alien-enum "Alien enum")))) nil [168786 169169])
            ("slime-print-apropos" function (:arguments ("plists")) nil [169171 170254])
            ("slime-call-describer" function (:arguments ("arg")) nil [170256 170507])
            ("slime-info" function (:user-visible-flag t) nil [170509 170795])
            ("slime-xref-mode-map" variable nil nil [170829 170857])
            ("define-derived-mode" code nil nil [170859 171371])
            ("slime-define-keys" code nil nil [171373 171828])
            ("cl-defmacro" code nil nil [171881 172369])
            ("slime-insert-xrefs" function (:arguments ("xref-alist")) nil [172371 173072])
            ("slime-xref-next-line" function nil nil [173074 173190])
            ("slime-xref-prev-line" function nil nil [173192 173310])
            ("slime-xref-show-location" function (:arguments ("loc")) nil [173312 173479])
            ("slime-next-location-function" variable nil nil [173481 173575])
            ("slime-previous-location-function" variable nil nil [173577 173679])
            ("slime-xref-last-buffer" variable nil nil [173681 173796])
            ("slime-show-xref-buffer" function (:arguments ("xrefs" "_type" "_symbol" "package")) nil [173798 174151])
            ("slime-show-xrefs" function (:arguments ("xrefs" "type" "symbol" "package")) nil [174153 174372])
            ("slime-who-calls" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [174397 174573])
            ("slime-calls-who" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [174575 174764])
            ("slime-who-references" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [174766 174966])
            ("slime-who-binds" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [174968 175151])
            ("slime-who-sets" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [175153 175333])
            ("slime-who-macroexpands" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [175335 175531])
            ("slime-who-specializes" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [175533 175732])
            ("slime-list-callers" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [175734 175929])
            ("slime-list-callees" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [175931 176126])
            ("slime-xref" function (:arguments ("type" "symbol" "continuation")) nil [176196 176857])
            ("slime-check-xref-implemented" function (:arguments ("type" "xrefs")) nil [176859 177070])
            ("slime-xref-type" function (:arguments ("type")) nil [177072 177150])
            ("slime-xrefs" function (:arguments ("types" "symbol" "continuation")) nil [177152 177583])
            ("slime-xref-location-at-point" function nil nil [177610 177923])
            ("slime-xref-dspec-at-point" function nil nil [177925 178170])
            ("slime-all-xrefs" function nil nil [178172 178572])
            ("slime-goto-xref" function (:user-visible-flag t) nil [178574 178701])
            ("slime-show-xref" function (:user-visible-flag t) nil [178703 178894])
            ("slime-goto-next-xref" function (:arguments ("backward")) nil [178896 179804])
            ("slime-goto-previous-xref" function nil nil [179806 179916])
            ("slime-search-property" function (:arguments ("prop" "backward" "prop-value-fn")) nil [179918 180796])
            ("slime-next-location" function (:user-visible-flag t) nil [180798 181096])
            ("slime-previous-location" function (:user-visible-flag t) nil [181098 181416])
            ("slime-recompile-xref" function (:arguments ("raw-prefix-arg")) nil [181418 181833])
            ("slime-recompile-all-xrefs" function (:arguments ("raw-prefix-arg")) nil [181835 182363])
            ("slime-xref-recompilation-cont" function (:arguments ("results" "dspecs" "buffer")) nil [182365 183114])
            ("slime-aggregate-compilation-results" function (:arguments ("results")) nil [183116 183404])
            ("slime-xref-insert-recompilation-flags" function (:arguments ("dspecs" "compilation-results")) nil [183406 184285])
            ("define-minor-mode" code nil nil [184310 184455])
            ("cl-macrolet" code nil nil [184457 185076])
            ("slime-macroexpand-undo" function (:arguments ("arg")) nil [185078 185522])
            ("slime-eval-macroexpand-expression" variable nil nil [185524 185675])
            ("slime-eval-macroexpand" function (:arguments ("expander" "string")) nil [185677 185967])
            ("slime-macroexpand-again" function (:user-visible-flag t) nil [185969 186208])
            ("slime-initialize-macroexpansion-buffer" function (:arguments ("expansion" "buffer")) nil [186210 186688])
            ("slime-create-macroexpansion-buffer" function nil nil [186690 187039])
            ("slime-eval-macroexpand-inplace" function
               (:user-visible-flag t
                :arguments ("expander"))
                nil [187041 188037])
            ("slime-macroexpand-1" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [188039 188369])
            ("slime-macroexpand-1-inplace" function (:arguments ("repeatedly")) nil [188371 188555])
            ("slime-macroexpand-all" function (:user-visible-flag t) nil [188557 188728])
            ("slime-macroexpand-all-inplace" function (:user-visible-flag t) nil [188730 188917])
            ("slime-compiler-macroexpand-1" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [188919 189194])
            ("slime-compiler-macroexpand-1-inplace" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [189196 189487])
            ("slime-expand-1" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [189489 189948])
            ("slime-expand-1-inplace" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [189950 190284])
            ("slime-format-string-expand" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [190286 190723])
            ("slime-interrupt" function (:user-visible-flag t) nil [190752 190955])
            ("slime-quit" function nil nil [190957 191048])
            ("slime-quit-lisp" function
               (:user-visible-flag t
                :arguments ("kill"))
                nil [191050 191249])
            ("slime-quit-lisp-internal" function (:arguments ("connection" "sentinel" "kill")) nil [191251 191708])
            ("slime-quit-sentinel" function (:arguments ("process" "_message")) nil [191710 192093])
            ("sldb-hook" variable nil nil [192119 192180])
            ("sldb-initial-restart-limit" variable (:default-value 6) nil [192182 192317])
            ("slime-make-variables-buffer-local" function (:arguments ("variables")) nil [192384 192493])
            ("slime-make-variables-buffer-local" code nil nil [192495 193093])
            ("sldb-in-face" function (:arguments ("name" "string")) nil [193174 193471])
            ("sldb-mode-syntax-table" variable (:default-value (let ((table (copy-syntax-table lisp-mode-syntax-table))) (modify-syntax-entry 60 "(" table) (modify-syntax-entry 62 ")" table) table)) nil [193492 194086])
            ("define-derived-mode" code nil nil [194088 195873])
            ("set-keymap-parent" code nil nil [195875 195925])
            ("slime-define-keys" code nil nil [195927 197068])
            ("dotimes" code nil nil [197127 197469])
            ("sldb-buffers" function (:arguments ("connection")) nil [197510 197881])
            ("sldb-find-buffer" function (:arguments ("thread" "connection")) nil [197883 198232])
            ("sldb-get-default-buffer" function nil nil [198234 198396])
            ("sldb-get-buffer" function (:arguments ("thread" "connection")) nil [198398 198866])
            ("sldb-debugged-continuations" function (:arguments ("connection")) nil [198868 199182])
            ("sldb-setup" function (:arguments ("thread" "level" "condition" "restarts" "frames" "conts")) nil [199184 201282])
            ("sldb-activate" function (:arguments ("thread" "level" "select")) nil [201284 201708])
            ("sldb-reinitialize" function (:arguments ("thread" "level")) nil [201710 201908])
            ("sldb-exit" function (:arguments ("thread" "_level" "stepping")) nil [201910 203025])
            ("sldb-close-step-buffer" function (:arguments ("buffer")) nil [203027 203185])
            ("sldb-insert-condition" function (:arguments ("condition")) nil [203219 203712])
            ("sldb-extras-hooks" variable nil nil [203714 203740])
            ("sldb-dispatch-extras" function (:arguments ("extras")) nil [203742 204082])
            ("sldb-insert-restarts" function (:arguments ("restarts" "start" "count")) nil [204084 205059])
            ("sldb-insert-more-restarts" function (:arguments ("restarts" "position" "start")) nil [205061 205275])
            ("sldb-frame.string" function (:arguments ("frame")) nil [205277 205366])
            ("sldb-frame.number" function (:arguments ("frame")) nil [205368 205453])
            ("sldb-frame.plist" function (:arguments ("frame")) nil [205455 205547])
            ("sldb-frame-restartable-p" function (:arguments ("frame")) nil [205549 205649])
            ("sldb-prune-initial-frames" function (:arguments ("frames")) nil [205651 206057])
            ("sldb-insert-frames" function (:arguments ("frames" "more")) nil [206059 206603])
            ("sldb-compute-frame-face" function (:arguments ("frame")) nil [206605 206750])
            ("sldb-insert-frame" function (:arguments ("frame" "face")) nil [206752 207383])
            ("sldb-fetch-more-frames" function (:arguments ("_")) nil [207385 208081])
            ("sldb-restart-at-point" function nil nil [208119 208231])
            ("sldb-frame-number-at-point" function nil nil [208233 208389])
            ("sldb-var-number-at-point" function nil nil [208391 208534])
            ("sldb-previous-frame-number" function nil nil [208536 208651])
            ("sldb-frame-details-visible-p" function nil nil [208653 208789])
            ("sldb-frame-region" function nil nil [208791 208852])
            ("sldb-forward-frame" function nil nil [208854 208947])
            ("sldb-backward-frame" function nil nil [208949 209282])
            ("sldb-goto-last-frame" function nil nil [209284 209588])
            ("sldb-beginning-of-backtrace" function (:user-visible-flag t) nil [209590 209712])
            ("slime-save-coordinates" function (:arguments ("origin" "body")) nil [209967 210576])
            ("put" code nil nil [210578 210631])
            ("slime-coordinates" function (:arguments ("origin")) nil [210633 210925])
            ("slime-restore-coordinate" function (:arguments ("base" "goal" "limit")) nil [210927 211328])
            ("slime-count-lines" function (:arguments ("start" "end")) nil [211330 211550])
            ("sldb-default-action" function (:user-visible-flag t) nil [211575 211742])
            ("sldb-default-action/mouse" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [211744 212050])
            ("sldb-cycle" function (:user-visible-flag t) nil [212052 212429])
            ("sldb-end-of-backtrace" function (:user-visible-flag t) nil [212431 212587])
            ("sldb-fetch-all-frames" function nil nil [212589 213008])
            ("sldb-show-source" function (:user-visible-flag t) nil [213037 213207])
            ("sldb-show-frame-source" function (:arguments ("frame-number")) nil [213209 213540])
            ("slime-show-source-location" function (:arguments ("source-location" "highlight" "recenter-arg")) nil [213542 213920])
            ("slime--display-position" function (:arguments ("pos" "other-window" "recenter-arg")) nil [213922 214105])
            ("slime--adjust-window-start" function (:arguments ("start" "end")) nil [214222 215069])
            ("slime--adjust-window-point" function (:arguments ("pos")) nil [215101 215415])
            ("slime--display-region" function (:arguments ("start" "end")) nil [215417 215748])
            ("slime-highlight-sexp" function (:arguments ("start" "end")) nil [215750 215986])
            ("slime-highlight-line" function (:arguments ("timeout")) nil [215988 216183])
            ("sldb-toggle-details" function
               (:user-visible-flag t
                :arguments ("on"))
                nil [216215 216613])
            ("sldb-show-frame-details" function nil nil [216615 217817])
            ("sldb-frame-details" function nil nil [217819 218165])
            ("sldb-insert-frame-variable-value-function" variable (:default-value (quote sldb-insert-frame-variable-value)) nil [218167 218253])
            ("sldb-insert-locals" function (:arguments ("vars" "prefix" "frame")) nil [218255 218975])
            ("sldb-insert-frame-variable-value" function (:arguments ("value" "_frame" "_index")) nil [218977 219083])
            ("sldb-hide-frame-details" function nil nil [219085 219470])
            ("sldb-disassemble" function (:user-visible-flag t) nil [219472 219734])
            ("sldb-eval-in-frame" function
               (:user-visible-flag t
                :arguments ("frame" "string" "package"))
                nil [219768 220115])
            ("sldb-pprint-eval-in-frame" function
               (:user-visible-flag t
                :arguments ("frame" "string" "package"))
                nil [220117 220470])
            ("sldb-read-form-for-frame" function (:arguments ("fstring")) nil [220472 220763])
            ("sldb-inspect-in-frame" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [220765 221162])
            ("sldb-inspect-var" function nil nil [221164 221369])
            ("sldb-inspect-condition" function (:user-visible-flag t) nil [221371 221546])
            ("sldb-print-condition" function nil nil [221548 221649])
            ("sldb-down" function (:user-visible-flag t) nil [221675 221757])
            ("sldb-up" function (:user-visible-flag t) nil [221759 221947])
            ("sldb-sugar-move" function (:arguments ("move-fn")) nil [221949 222155])
            ("sldb-details-up" function (:user-visible-flag t) nil [222157 222272])
            ("sldb-details-down" function (:user-visible-flag t) nil [222274 222389])
            ("sldb-quit" function (:user-visible-flag t) nil [222415 222659])
            ("sldb-continue" function (:user-visible-flag t) nil [222661 222949])
            ("sldb-abort" function (:user-visible-flag t) nil [222951 223115])
            ("sldb-invoke-restart" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [223117 223540])
            ("sldb-invoke-restart-by-name" function (:arguments ("restart-name")) nil [223542 223963])
            ("sldb-break-with-default-debugger" function
               (:user-visible-flag t
                :arguments ("dont-unwind"))
                nil [223965 224235])
            ("sldb-break-with-system-debugger" function
               (:user-visible-flag t
                :arguments ("lightweight"))
                nil [224237 224410])
            ("slime-attach-gdb" function
               (:user-visible-flag t
                :arguments ("connection" "lightweight"))
                nil [224412 225603])
            ("slime-read-connection" function (:arguments ("prompt" "initial-value")) nil [225605 226226])
            ("sldb-step" function (:user-visible-flag t) nil [226228 226399])
            ("sldb-next" function (:user-visible-flag t) nil [226401 226553])
            ("sldb-out" function (:user-visible-flag t) nil [226555 226741])
            ("sldb-break-on-return" function (:user-visible-flag t) nil [226743 227026])
            ("sldb-break" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [227028 227257])
            ("sldb-return-from-frame" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [227259 227688])
            ("sldb-restart-frame" function (:user-visible-flag t) nil [227690 228003])
            ("slime-toggle-break-on-signals" function (:user-visible-flag t) nil [228005 228197])
            ("sldb-recompile-frame-source" function (:arguments ("raw-prefix-arg")) nil [228237 228749])
            ("slime-threads-buffer-name" variable (:default-value (slime-buffer-name :threads)) nil [228780 228843])
            ("slime-threads-buffer-timer" variable nil nil [228844 228883])
            ("slime-threads-update-interval" variable nil nil [228885 229078])
            ("slime-list-threads" function (:user-visible-flag t) nil [229080 229728])
            ("slime-quit-threads-buffer" function nil nil [229730 229916])
            ("slime-update-threads-buffer" function nil nil [229918 230096])
            ("slime-move-point" function (:arguments ("position")) nil [230098 230355])
            ("slime-display-threads" function (:arguments ("threads")) nil [230357 230965])
            ("slime-transpose-lists" function (:arguments ("list-of-lists")) nil [230967 231213])
            ("slime-insert-table-row" function (:arguments ("line" "line-props" "col-props" "col-widths")) nil [231215 231547])
            ("slime-insert-table" function (:arguments ("rows" "header" "row-properties" "column-properties")) nil [231549 232469])
            ("slime-threads-table-properties" variable (:default-value (quote (nil (face bold)))) nil [232471 232531])
            ("slime-insert-threads" function (:arguments ("threads")) nil [232533 233268])
            ("define-derived-mode" code nil nil [233290 233578])
            ("slime-define-keys" code nil nil [233580 233785])
            ("slime-thread-kill" function nil nil [233787 233995])
            ("slime-get-region-properties" function (:arguments ("prop" "start" "end")) nil [233997 234365])
            ("slime-get-properties" function (:arguments ("prop")) nil [234367 234660])
            ("slime-thread-attach" function nil nil [234662 234911])
            ("slime-thread-debug" function nil nil [234913 235068])
            ("define-derived-mode" code nil nil [235098 235365])
            ("slime-define-keys" code nil nil [235367 235614])
            ("slime-connection-at-point" function nil nil [235616 235744])
            ("slime-quit-connection-at-point" function (:arguments ("connection")) nil [235746 236229])
            ("slime-restart-connection-at-point" function (:arguments ("connection")) nil [236231 236422])
            ("slime-connection-list-make-default" function (:user-visible-flag t) nil [236424 236631])
            ("slime-connections-buffer-name" variable (:default-value (slime-buffer-name :connections)) nil [236633 236704])
            ("slime-list-connections" function (:user-visible-flag t) nil [236706 236949])
            ("slime-update-connection-list" function (:user-visible-flag t) nil [236951 237171])
            ("slime-draw-connection-list" function nil nil [237173 237971])
            ("slime-inspector" customgroup (:user-visible-flag t) nil [237991 238087])
            ("slime-inspector-topline-face" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [238089 238206])
            ("slime-inspector-label-face" variable
               (:default-value (quote ((t (:inherit font-lock-constant-face))))
                :type "face")
                nil [238208 238352])
            ("slime-inspector-value-face" variable
               (:default-value (quote ((t (:inherit font-lock-builtin-face))))
                :type "face")
                nil [238354 238516])
            ("slime-inspector-action-face" variable
               (:default-value (quote ((t (:inherit font-lock-warning-face))))
                :type "face")
                nil [238518 238668])
            ("slime-inspector-type-face" variable
               (:default-value (quote ((t (:inherit font-lock-type-face))))
                :type "face")
                nil [238670 238815])
            ("slime-inspector-mark-stack" variable (:default-value (quote nil)) nil [238817 238856])
            ("slime-inspect" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [238858 239126])
            ("define-derived-mode" code nil nil [239128 239374])
            ("slime-inspector-buffer" function nil nil [239376 239686])
            ("slime-inspector-fontify" function (:arguments ("face" "string")) nil [239688 239815])
            ("slime-inspector-insert-ispec-function" variable (:default-value (quote slime-inspector-insert-ispec)) nil [239817 239893])
            ("slime-open-inspector" function (:arguments ("inspected-parts" "point" "hook")) nil [239895 241235])
            ("slime-inspector-limit" variable (:default-value 500) nil [241237 241271])
            ("slime-inspector-insert-content" function (:arguments ("content")) nil [241273 241471])
            ("slime-inspector-insert-chunk" function (:arguments ("chunk" "prev" "next")) nil [241473 241894])
            ("slime-inspector-insert-ispec" function (:arguments ("ispec")) nil [241896 242572])
            ("slime-inspector-position" function nil nil [242574 242947])
            ("slime-inspector-property-at-point" function nil nil [242949 243455])
            ("slime-inspector-operate-on-point" function (:user-visible-flag t) nil [243457 244609])
            ("slime-inspector-operate-on-click" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [244611 245137])
            ("slime-inspector-pop" function (:user-visible-flag t) nil [245139 245470])
            ("slime-inspector-next" function (:user-visible-flag t) nil [245472 245785])
            ("slime-inspector-quit" function (:user-visible-flag t) nil [245787 245941])
            ("slime-find-inspectable-object" function (:arguments ("direction" "limit")) nil [246039 246858])
            ("slime-inspector-next-inspectable-object" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [246860 248265])
            ("slime-inspector-previous-inspectable-object" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [248267 248532])
            ("slime-inspector-describe" function nil nil [248534 248637])
            ("slime-inspector-pprint" function (:arguments ("part")) nil [248639 248864])
            ("slime-inspector-eval" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [248866 249100])
            ("slime-inspector-history" function (:user-visible-flag t) nil [249102 249246])
            ("slime-inspector-show-source" function (:arguments ("part")) nil [249248 249537])
            ("slime-inspector-reinspect" function nil nil [249539 249762])
            ("slime-inspector-toggle-verbose" function nil nil [249764 249997])
            ("slime-inspector-insert-more-button" function (:arguments ("index" "previous")) nil [249999 250262])
            ("slime-inspector-fetch-all" function (:user-visible-flag t) nil [250264 250564])
            ("slime-inspector-fetch-more" function (:arguments ("button")) nil [250566 250971])
            ("slime-inspector-fetch-chunk" function (:arguments ("chunk" "prev" "cont")) nil [250973 251090])
            ("slime-inspector-fetch" function (:arguments ("chunk" "limit" "prev" "cont")) nil [251092 251666])
            ("slime-inspector-next-range" function (:arguments ("chunk" "limit" "prev")) nil [251668 252112])
            ("slime-inspector-join-chunks" function (:arguments ("chunk1" "chunk2")) nil [252114 252440])
            ("set-keymap-parent" code nil nil [252442 252503])
            ("slime-define-keys" code nil nil [252505 253426])
            ("slime-selector-methods" variable nil nil [253452 253670])
            ("slime-selector-other-window" variable nil nil [253672 253762])
            ("slime-selector" function
               (:user-visible-flag t
                :arguments ("other-window"))
                nil [253764 254659])
            ("def-slime-selector-method" function (:arguments ("key" "description" "body")) nil [254661 255837])
            ("def-slime-selector-method" code nil nil [255839 256272])
            ("cl-pushnew" code nil nil [256274 256398])
            ("def-slime-selector-method" code nil nil [256400 256453])
            ("def-slime-selector-method" code nil nil [256455 256647])
            ("def-slime-selector-method" code nil nil [256649 256732])
            ("def-slime-selector-method" code nil nil [256734 256853])
            ("def-slime-selector-method" code nil nil [256855 256999])
            ("def-slime-selector-method" code nil nil [257001 257132])
            ("def-slime-selector-method" code nil nil [257134 257253])
            ("def-slime-selector-method" code nil nil [257255 257451])
            ("def-slime-selector-method" code nil nil [257453 257653])
            ("def-slime-selector-method" code nil nil [257655 257762])
            ("slime-recently-visited-buffer" function (:arguments ("mode")) nil [257764 258266])
            ("slime-update-indentation" function (:user-visible-flag t) nil [258288 258466])
            ("slime-indentation-update-hooks" variable nil nil [258468 258507])
            ("slime-intern-indentation-spec" function (:arguments ("spec")) nil [258509 258768])
            ("slime-handle-indentation-update" function (:arguments ("alist")) nil [258915 259999])
            ("slime-require" function (:arguments ("module")) nil [260025 260155])
            ("slime-load-contribs" function nil nil [260157 260774])
            ("cl-defstruct" code nil nil [260776 260892])
            ("slime-contrib--enable-fun" function (:arguments ("name")) nil [260894 260981])
            ("slime-contrib--disable-fun" function (:arguments ("name")) nil [260983 261073])
            ("define-slime-contrib" function (:arguments ("name" "_docstring" "clauses")) nil [261075 262400])
            ("slime-all-contribs" function nil nil [262402 262562])
            ("slime-contrib-all-dependencies" function (:arguments ("contrib")) nil [262564 262854])
            ("slime-find-contrib" function (:arguments ("name")) nil [262856 262918])
            ("slime-read-contrib-name" function nil nil [262920 263136])
            ("slime-enable-contrib" function (:arguments ("name")) nil [263138 263356])
            ("slime-disable-contrib" function (:arguments ("name")) nil [263358 263578])
            ("slime-easy-menu" variable (:default-value (let ((C (quote (slime-connected-p)))) (\` ("SLIME" ["Edit Definition..." slime-edit-definition (\, C)] ["Return From Definition" slime-pop-find-definition-stack (\, C)] ["Complete Symbol" completion-at-point (\, C)] "--" ("Evaluation" ["Eval Defun" slime-eval-defun (\, C)] ["Eval Last Expression" slime-eval-last-expression (\, C)] ["Eval And Pretty-Print" slime-pprint-eval-last-expression (\, C)] ["Eval Region" slime-eval-region (\, C)] ["Eval Region And Pretty-Print" slime-pprint-eval-region (\, C)] ["Interactive Eval..." slime-interactive-eval (\, C)] ["Edit Lisp Value..." slime-edit-value (\, C)] ["Call Defun" slime-call-defun (\, C)]) ("Debugging" ["Macroexpand Once..." slime-macroexpand-1 (\, C)] ["Macroexpand All..." slime-macroexpand-all (\, C)] ["Create Trace Buffer" slime-redirect-trace-output (\, C)] ["Toggle Trace..." slime-toggle-trace-fdefinition (\, C)] ["Untrace All" slime-untrace-all (\, C)] ["Disassemble..." slime-disassemble-symbol (\, C)] ["Inspect..." slime-inspect (\, C)]) ("Compilation" ["Compile Defun" slime-compile-defun (\, C)] ["Compile/Load File" slime-compile-and-load-file (\, C)] ["Compile File" slime-compile-file (\, C)] ["Compile Region" slime-compile-region (\, C)] "--" ["Next Note" slime-next-note t] ["Previous Note" slime-previous-note t] ["Remove Notes" slime-remove-notes t] ["List Notes" slime-list-compiler-notes (\, C)]) ("Cross Reference" ["Who Calls..." slime-who-calls (\, C)] ["Who References... " slime-who-references (\, C)] ["Who Sets..." slime-who-sets (\, C)] ["Who Binds..." slime-who-binds (\, C)] ["Who Macroexpands..." slime-who-macroexpands (\, C)] ["Who Specializes..." slime-who-specializes (\, C)] ["List Callers..." slime-list-callers (\, C)] ["List Callees..." slime-list-callees (\, C)] ["Next Location" slime-next-location t]) ("Editing" ["Check Parens" check-parens t] ["Update Indentation" slime-update-indentation (\, C)] ["Select Buffer" slime-selector t]) ("Profiling" ["Toggle Profiling..." slime-toggle-profile-fdefinition (\, C)] ["Profile Package" slime-profile-package (\, C)] ["Profile by Substring" slime-profile-by-substring (\, C)] ["Unprofile All" slime-unprofile-all (\, C)] ["Show Profiled" slime-profiled-functions (\, C)] "--" ["Report" slime-profile-report (\, C)] ["Reset Counters" slime-profile-reset (\, C)]) ("Documentation" ["Describe Symbol..." slime-describe-symbol (\, C)] ["Lookup Documentation..." slime-documentation-lookup t] ["Apropos..." slime-apropos (\, C)] ["Apropos all..." slime-apropos-all (\, C)] ["Apropos Package..." slime-apropos-package (\, C)] ["Hyperspec..." slime-hyperspec-lookup t]) "--" ["Interrupt Command" slime-interrupt (\, C)] ["Abort Async. Command" slime-quit (\, C)] ["Sync Package & Directory" slime-sync-package-and-default-directory (\, C)])))) nil [263604 267198])
            ("slime-sldb-easy-menu" variable (:default-value (let ((C (quote (slime-connected-p)))) (\` ("SLDB" ["Next Frame" sldb-down t] ["Previous Frame" sldb-up t] ["Toggle Frame Details" sldb-toggle-details t] ["Next Frame (Details)" sldb-details-down t] ["Previous Frame (Details)" sldb-details-up t] "--" ["Eval Expression..." slime-interactive-eval (\, C)] ["Eval in Frame..." sldb-eval-in-frame (\, C)] ["Eval in Frame (pretty print)..." sldb-pprint-eval-in-frame (\, C)] ["Inspect In Frame..." sldb-inspect-in-frame (\, C)] ["Inspect Condition Object" sldb-inspect-condition (\, C)] "--" ["Restart Frame" sldb-restart-frame (\, C)] ["Return from Frame..." sldb-return-from-frame (\, C)] ("Invoke Restart" ["Continue" sldb-continue (\, C)] ["Abort" sldb-abort (\, C)] ["Step" sldb-step (\, C)] ["Step next" sldb-next (\, C)] ["Step out" sldb-out (\, C)]) "--" ["Quit (throw)" sldb-quit (\, C)] ["Break With Default Debugger" sldb-break-with-default-debugger (\, C)])))) nil [267200 268283])
            ("easy-menu-define" code nil nil [268285 268356])
            ("slime-add-easy-menu" function nil nil [268358 268438])
            ("add-hook" code nil nil [268440 268488])
            ("slime-sldb-add-easy-menu" function nil nil [268490 268665])
            ("add-hook" code nil nil [268667 268719])
            ("slime-cheat-sheet-table" variable (:default-value (quote ((:title "Editing lisp code" :map slime-mode-map :bindings ((slime-eval-defun "Evaluate current top level form") (slime-compile-defun "Compile current top level form") (slime-interactive-eval "Prompt for form and eval it") (slime-compile-and-load-file "Compile and load current file") (slime-sync-package-and-default-directory "Synch default package and directory with current buffer") (slime-next-note "Next compiler note") (slime-previous-note "Previous compiler note") (slime-remove-notes "Remove notes") slime-documentation-lookup)) (:title "Completion" :map slime-mode-map :bindings (slime-indent-and-complete-symbol slime-fuzzy-complete-symbol)) (:title "Within SLDB buffers" :map sldb-mode-map :bindings ((sldb-default-action "Do 'whatever' with thing at point") (sldb-toggle-details "Toggle frame details visualization") (sldb-quit "Quit to REPL") (sldb-abort "Invoke ABORT restart") (sldb-continue "Invoke CONTINUE restart (if available)") (sldb-show-source "Jump to frame's source code") (sldb-eval-in-frame "Evaluate in frame at point") (sldb-inspect-in-frame "Evaluate in frame at point and inspect result"))) (:title "Within the Inspector" :map slime-inspector-mode-map :bindings ((slime-inspector-next-inspectable-object "Jump to next inspectable object") (slime-inspector-operate-on-point "Inspect object or execute action at point") (slime-inspector-reinspect "Reinspect current object") (slime-inspector-pop "Return to previous object") (slime-inspector-toggle-verbose "Toggle verbose mode") (slime-inspector-quit "Quit"))) (:title "Finding Definitions" :map slime-mode-map :bindings (slime-edit-definition slime-pop-find-definition-stack))))) nil [268741 271041])
            ("slime-cheat-sheet" function nil nil [271043 273109])
            ("slime-intersperse" function (:arguments ("element" "list")) nil [273180 273388])
            ("slime-group-similar" function (:arguments ("similar-p" "list")) nil [273495 273993])
            ("slime-alistify" function (:arguments ("list" "key" "test")) nil [273995 274486])
            ("slime-length=" function (:arguments ("seq" "n")) nil [274501 274758])
            ("slime-length>" function (:arguments ("seq" "n")) nil [274760 274901])
            ("slime-trim-whitespace" function (:arguments ("str")) nil [274903 275361])
            ("slime-buffer-narrowed-p" function (:arguments ("buffer")) nil [275385 275694])
            ("slime-column-max" function nil nil [275696 275925])
            ("slime-cl-symbol-name" function (:arguments ("symbol")) nil [275964 276281])
            ("slime-cl-symbol-package" function (:arguments ("symbol" "default")) nil [276283 276481])
            ("slime-qualify-cl-symbol-name" function (:arguments ("symbol-or-name")) nil [276483 277181])
            ("slime-point-moves-p" function (:arguments ("body")) nil [277248 277525])
            ("slime-forward-sexp" function (:arguments ("count")) nil [277527 277740])
            ("slime-reader-conditionals-regexp" variable
               (:constant-flag t
                :default-value (regexp-opt (quote ("#+" "#-" "#!+" "#!-"))))
                nil [277742 277939])
            ("slime-forward-reader-conditional" function nil nil [277941 278554])
            ("slime-forward-cruft" function nil nil [278556 278848])
            ("slime-keywordify" function (:arguments ("symbol")) nil [278850 279070])
            ("put" code nil nil [279072 279180])
            ("put" code nil nil [279182 279371])
            ("slime-eval-feature-expression" function (:arguments ("e")) nil [279439 280456])
            ("slime-defun-at-point" function nil nil [280511 280671])
            ("slime-region-for-defun-at-point" function nil nil [280673 280918])
            ("slime-beginning-of-symbol" function nil nil [280920 281311])
            ("slime-end-of-symbol" function nil nil [281313 281463])
            ("put" code nil nil [281465 281513])
            ("put" code nil nil [281514 281574])
            ("slime-symbol-start-pos" function nil nil [281576 281791])
            ("slime-symbol-end-pos" function nil nil [281793 281873])
            ("slime-bounds-of-symbol-at-point" function nil nil [281875 282172])
            ("slime-symbol-at-point" function nil nil [282174 282499])
            ("slime-bounds-of-sexp-at-point" function nil nil [282501 282954])
            ("slime-sexp-at-point" function nil nil [282956 283217])
            ("slime-sexp-at-point-or-error" function nil nil [283219 283392])
            ("slime-string-at-point" function nil nil [283394 283621])
            ("slime-string-at-point-or-error" function nil nil [283623 283792])
            ("slime-input-complete-p" function (:arguments ("start" "end")) nil [283794 284442])
            ("cl-loop" code nil nil [284478 285076])
            ("bytecomp" include nil nil [285118 285137])
            ("slime--byte-compile" function (:arguments ("symbol")) nil [285140 285310])
            ("slime--compile-hotspots" function nil nil [285312 286115])
            ("slime--compile-hotspots" code nil nil [286117 286142])
            ("run-hooks" code nil nil [286144 286172])
            ("slime" package nil nil [286173 286189]))          
      :file "slime.el"
      :pointmax 286318
      :fsize 286317
      :lastmodtime '(22379 8386 954434 264000)
      :unmatched-syntax '((close-paren 285137 . 285138) (symbol 285098 . 285115) (open-paren 285097 . 285098) (close-paren 87653 . 87654) (symbol 87534 . 87550) (open-paren 87533 . 87534) (close-paren 3092 . 3093) (symbol 3015 . 3032) (open-paren 3014 . 3015) (close-paren 2825 . 2826) (symbol 2711 . 2727) (open-paren 2710 . 2711) (close-paren 2684 . 2685) (symbol 2653 . 2670) (open-paren 2652 . 2653) (close-paren 2649 . 2650) (symbol 2530 . 2546) (open-paren 2529 . 2530))))
  :file "!home!lyra!.emacs.d!elpa!slime-20160614.1114!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
