;; Object ducpel-20140418.2216/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ducpel-20140418.2216/"
  :tables
  (list
    (semanticdb-table "ducpel-autoloads.el"
      :major-mode 'emacs-lisp-mode
      :tags nil
      :file "ducpel-autoloads.el"
      :pointmax 285
      :fsize 579
      :lastmodtime '(22437 58282 961186 883000)
      :unmatched-syntax nil)
    (semanticdb-table "ducpel.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1924 1941])
            ("gamegrid" include nil nil [1942 1961])
            ("ducpel" customgroup (:user-visible-flag t) nil [1983 2036])
            ("ducpel-use-glyphs" variable (:default-value t) nil [2038 2146])
            ("ducpel-buffer-name" variable (:default-value "*ducpel*") nil [2148 2253])
            ("ducpel-replay-pause" variable (:default-value 0.5) nil [2255 2456])
            ("ducpel-levels-directory" variable (:default-value (expand-file-name "levels" (file-name-directory (locate-library "ducpel")))) nil [2458 2659])
            ("ducpel-user-levels-directory" variable (:default-value user-emacs-directory) nil [2661 2894])
            ("ducpel-user-saves-directory" variable (:default-value user-emacs-directory) nil [2896 3122])
            ("ducpel-default-level" variable (:default-value 1) nil [3124 3211])
            ("ducpel-empty" variable (:constant-flag t) nil [3244 3269])
            ("ducpel-wall" variable
               (:constant-flag t
                :default-value 1)
                nil [3270 3294])
            ("ducpel-impassable" variable
               (:constant-flag t
                :default-value 2)
                nil [3295 3325])
            ("ducpel-floor" variable
               (:constant-flag t
                :default-value 3)
                nil [3326 3351])
            ("ducpel-man" variable
               (:constant-flag t
                :default-value 4)
                nil [3352 3375])
            ("ducpel-active-man" variable
               (:constant-flag t
                :default-value 5)
                nil [3376 3406])
            ("ducpel-box" variable
               (:constant-flag t
                :default-value 6)
                nil [3407 3430])
            ("ducpel-simple" variable (:constant-flag t) nil [3451 3477])
            ("ducpel-exit" variable
               (:constant-flag t
                :default-value 1)
                nil [3478 3502])
            ("ducpel-teleport" variable
               (:constant-flag t
                :default-value 2)
                nil [3503 3531])
            ("ducpel-left" variable
               (:constant-flag t
                :default-value 3)
                nil [3532 3556])
            ("ducpel-right" variable
               (:constant-flag t
                :default-value 4)
                nil [3557 3582])
            ("ducpel-up" variable
               (:constant-flag t
                :default-value 5)
                nil [3583 3605])
            ("ducpel-down" variable
               (:constant-flag t
                :default-value 6)
                nil [3606 3630])
            ("ducpel-horizontal" variable
               (:constant-flag t
                :default-value 7)
                nil [3631 3661])
            ("ducpel-vertical" variable
               (:constant-flag t
                :default-value 8)
                nil [3662 3690])
            ("ducpel-multi" variable
               (:constant-flag t
                :default-value 9)
                nil [3691 3716])
            ("ducpel-cell-types" variable
               (:constant-flag t
                :default-value (list ducpel-empty ducpel-wall ducpel-impassable ducpel-floor ducpel-man ducpel-active-man ducpel-box))
                nil [3718 3893])
            ("ducpel-floor-types" variable
               (:constant-flag t
                :default-value (list ducpel-simple ducpel-exit ducpel-teleport ducpel-left ducpel-right ducpel-up ducpel-down ducpel-horizontal ducpel-vertical ducpel-multi))
                nil [3895 4124])
            ("ducpel-init-cell-char-alist" variable
               (:constant-flag t
                :default-value (let ((len (length ducpel-floor-types)) (floor-shift 126)) (list (cons ducpel-empty 23) (cons ducpel-wall 24) (cons ducpel-impassable 25) (cons ducpel-floor floor-shift) (cons ducpel-man (+ len floor-shift)) (cons ducpel-active-man (+ (* 2 len) floor-shift)) (cons ducpel-box (+ (* 3 len) floor-shift)))))
                nil [4778 5317])
            ("ducpel-left-move" variable
               (:constant-flag t
                :default-value 1)
                nil [5333 5368])
            ("ducpel-right-move" variable
               (:constant-flag t
                :default-value 2)
                nil [5369 5404])
            ("ducpel-up-move" variable
               (:constant-flag t
                :default-value 4)
                nil [5405 5440])
            ("ducpel-down-move" variable
               (:constant-flag t
                :default-value 8)
                nil [5441 5476])
            ("ducpel-action" variable
               (:constant-flag t
                :default-value 3)
                nil [5477 5503])
            ("ducpel-move-type-alist" variable
               (:constant-flag t
                :default-value (list (cons ducpel-left ducpel-left-move) (cons ducpel-right ducpel-right-move) (cons ducpel-up ducpel-up-move) (cons ducpel-down ducpel-down-move) (cons ducpel-horizontal (+ ducpel-left-move ducpel-right-move)) (cons ducpel-vertical (+ ducpel-up-move ducpel-down-move)) (cons ducpel-multi (+ ducpel-left-move ducpel-right-move ducpel-up-move ducpel-down-move))))
                nil [5505 6095])
            ("ducpel-break-wall-power" variable
               (:constant-flag t
                :default-value 3)
                nil [6097 6200])
            ("ducpel-map-re" variable
               (:constant-flag t
                :default-value "^;+ *Map")
                nil [6239 6274])
            ("ducpel-objects-re" variable
               (:constant-flag t
                :default-value "^;+ *Objects")
                nil [6275 6318])
            ("ducpel-solution-re" variable
               (:constant-flag t
                :default-value "^;+ *Solution")
                nil [6319 6364])
            ("ducpel-ignored-line-re" variable
               (:constant-flag t
                :default-value (rx line-start (or (and ";" (* any)) (* blank)) line-end))
                nil [6366 6526])
            ("ducpel-empty-map-char" variable
               (:constant-flag t
                :default-value 32)
                nil [6528 6564])
            ("ducpel-wall-map-char" variable
               (:constant-flag t
                :default-value 35)
                nil [6565 6599])
            ("ducpel-impassable-map-char" variable
               (:constant-flag t
                :default-value 64)
                nil [6600 6640])
            ("ducpel-floor-map-chars" variable
               (:constant-flag t
                :default-value ".ETLRUDHVM")
                nil [6641 6687])
            ("ducpel-box-map-chars" variable
               (:constant-flag t
                :default-value "betlrudhvm")
                nil [6688 6734])
            ("ducpel-man-map-char" variable
               (:constant-flag t
                :default-value 112)
                nil [6735 6768])
            ("ducpel-active-man-map-char" variable
               (:constant-flag t
                :default-value 80)
                nil [6769 6809])
            ("ducpel-men" variable (:default-value []) nil [6836 6970])
            ("ducpel-active-man-index" variable nil nil [6972 7051])
            ("ducpel-teleports" variable nil nil [7053 7199])
            ("ducpel-undo-list" variable nil nil [7201 7544])
            ("ducpel-undo-current-cells" variable nil nil [7546 7832])
            ("ducpel-undo-current-men" variable (:default-value []) nil [7834 8045])
            ("ducpel-undo-current-active-index" variable nil nil [8047 8199])
            ("ducpel-undo-current-teleports" variable nil nil [8201 8384])
            ("ducpel-moves" variable nil nil [8386 8456])
            ("ducpel-done" variable nil nil [8458 8526])
            ("ducpel-moves-history" variable nil nil [8528 8855])
            ("ducpel-solution" variable nil nil [8857 8969])
            ("ducpel-level-data" variable nil nil [8971 9189])
            ("ducpel-level" variable nil nil [9191 9248])
            ("ducpel-level-file" variable nil nil [9250 9330])
            ("ducpel-width" variable nil nil [9332 9391])
            ("ducpel-height" variable nil nil [9393 9454])
            ("ducpel-cell-plists" variable (:default-value (make-vector 256 nil)) nil [9469 9761])
            ("ducpel-get-cell-char-by-plist" function (:arguments ("plist")) nil [9763 10194])
            ("ducpel-init-cell-plists" function nil nil [10196 10817])
            ("ducpel-init-cell-plists" code nil nil [10819 10844])
            ("ducpel-get-cell-plist-by-cell-char" function (:arguments ("char")) nil [10846 10986])
            ("ducpel-get-cell-plist-by-xy" function (:arguments ("x" "y")) nil [10988 11155])
            ("ducpel-set-cell" function (:arguments ("x" "y" "plist")) nil [11157 11520])
            ("ducpel-get-man-index-by-shift" function (:arguments ("shift" "index")) nil [11533 11797])
            ("ducpel-get-man-xy" function (:arguments ("index")) nil [11799 12097])
            ("ducpel-get-man-index-by-xy" function (:arguments ("x" "y")) nil [12099 12332])
            ("ducpel-set-man-xy" function (:arguments ("from-x" "from-y" "to-x" "to-y")) nil [12334 12617])
            ("ducpel-delete-man" function (:arguments ("index")) nil [12619 13023])
            ("ducpel-set-active-man" function (:arguments ("index")) nil [13025 13449])
            ("ducpel-set-active-man-1" function (:arguments ("index" "exit-index")) nil [13451 14808])
            ("ducpel-get-active-cell-xy" function nil nil [14810 14991])
            ("ducpel-get-active-cell-plist" function nil nil [14993 15163])
            ("ducpel-next-man" function (:user-visible-flag t) nil [15165 15288])
            ("ducpel-previous-man" function (:user-visible-flag t) nil [15290 15422])
            ("ducpel-do" function (:arguments ("move-type")) nil [15457 16054])
            ("ducpel-do-action" function nil nil [16056 16900])
            ("ducpel-do-move" function (:arguments ("direction")) nil [16902 17168])
            ("ducpel-teleport-active-man" function nil nil [17170 18462])
            ("ducpel-teleport-get-free-cell" function (:arguments ("cells")) nil [18464 18881])
            ("ducpel-cell-can-move-p" function (:arguments ("floor-type" "direction")) nil [18883 19276])
            ("ducpel-get-xy" function (:arguments ("from-x" "from-y" "direction" "val")) nil [19278 19877])
            ("ducpel-get-last-empty-xy" function (:arguments ("x" "y" "direction")) nil [19879 20556])
            ("ducpel-check-done" function nil nil [20558 20750])
            ("ducpel-done-p" function (:arguments ("show-message")) nil [20752 21159])
            ("ducpel-add-move" function nil nil [21161 21276])
            ("ducpel-remove-move" function nil nil [21278 21396])
            ("ducpel-action" function (:user-visible-flag t) nil [21398 21509])
            ("ducpel-move-left" function (:user-visible-flag t) nil [21511 21609])
            ("ducpel-move-right" function (:user-visible-flag t) nil [21611 21712])
            ("ducpel-move-up" function (:user-visible-flag t) nil [21714 21806])
            ("ducpel-move-down" function (:user-visible-flag t) nil [21808 21906])
            ("ducpel-from-x" variable nil nil [22043 22069])
            ("ducpel-from-y" variable nil nil [22070 22096])
            ("ducpel-from-char" variable nil nil [22097 22126])
            ("ducpel-from-plist" variable nil nil [22127 22157])
            ("ducpel-from-type" variable nil nil [22158 22187])
            ("ducpel-to-x" variable nil nil [22188 22212])
            ("ducpel-to-y" variable nil nil [22213 22237])
            ("ducpel-to-char" variable nil nil [22238 22265])
            ("ducpel-to-plist" variable nil nil [22266 22294])
            ("ducpel-to-type" variable nil nil [22295 22322])
            ("ducpel-power" variable nil nil [22323 22348])
            ("ducpel-direction" variable nil nil [22349 22378])
            ("ducpel-move" function (:arguments ("x" "y" "direction" "power")) nil [22380 25396])
            ("ducpel-move-object-to-floor" function nil nil [25398 26117])
            ("ducpel-move-object-to-wall" function nil nil [26119 26493])
            ("ducpel-move-man-to-emty" function nil nil [26495 27113])
            ("ducpel-move-box-to-empty" function nil nil [27115 27671])
            ("ducpel-undo-reset-current" function nil nil [27829 28112])
            ("ducpel-undo-init" function nil nil [28114 28227])
            ("ducpel-undo-save-current" function nil nil [28229 28554])
            ("ducpel-undo-changes" function (:arguments ("cells" "men" "active" "teleports")) nil [28556 29037])
            ("ducpel-undo" function (:user-visible-flag t) nil [29039 29668])
            ("ducpel-replay" function
               (:user-visible-flag t
                :arguments ("moves"))
                nil [29687 30012])
            ("defalias" code nil nil [30014 30088])
            ("ducpel-replay-solution" function (:user-visible-flag t) nil [30090 30372])
            ("ducpel-replay-from-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [30374 30632])
            ("ducpel-save-replay" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [30634 31254])
            ("ducpel-glyphs-function" variable nil nil [31279 31748])
            ("declare-function" code nil nil [31809 31869])
            ("ducpel-get-glyphs" function nil nil [31871 32069])
            ("ducpel-get-display-options" function nil nil [32071 32403])
            ("ducpel-print-level-line" variable (:default-value 1) nil [32426 32460])
            ("ducpel-print-moves-line" variable (:default-value 2) nil [32461 32495])
            ("ducpel-print-done-line" variable (:default-value 3) nil [32496 32529])
            ("ducpel-print-string" function (:arguments ("string" "dy")) nil [32531 32951])
            ("ducpel-print-level" function nil nil [32953 33118])
            ("ducpel-print-moves" function nil nil [33120 33271])
            ("ducpel-print-done" function nil nil [33273 33442])
            ("ducpel-print-info" function nil nil [33444 33584])
            ("ducpel-map-char-alist" variable nil nil [33608 33702])
            ("ducpel-objects-char-alist" variable nil nil [33704 33814])
            ("ducpel-init-map-char-alist" function nil nil [33816 34785])
            ("ducpel-init-map-char-alist" code nil nil [34787 34815])
            ("ducpel-get-cell-plist-by-map-chars" function (:arguments ("map-char" "obj-char")) nil [34817 35706])
            ("ducpel-get-cell-char-by-map-chars" function (:arguments ("map-char" "obj-char")) nil [35708 35942])
            ("ducpel-parse-solution" function nil nil [35944 36351])
            ("ducpel-parse-map" function (:arguments ("re")) nil [36353 36874])
            ("ducpel-init-level-data" function (:arguments ("file")) nil [36876 38212])
            ("ducpel-init-buffer" function nil nil [38214 39221])
            ("ducpel-restart-level" function
               (:user-visible-flag t
                :arguments ("reload"))
                nil [39244 39642])
            ("ducpel-get-file-by-level" function (:arguments ("level")) nil [39644 39789])
            ("ducpel-goto-level" function
               (:user-visible-flag t
                :arguments ("level"))
                nil [39791 40105])
            ("ducpel-next-level" function (:user-visible-flag t) nil [40107 40260])
            ("ducpel-previous-level" function (:user-visible-flag t) nil [40262 40423])
            ("ducpel-load-level-from-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [40425 40698])
            ("ducpel-get-index-by-shift" function (:arguments ("len" "index" "shift")) nil [40712 40898])
            ("ducpel-get-index-by-element" function (:arguments ("array-or-list" "elt" "cmp" "noerror")) nil [40900 41778])
            ("ducpel-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "R" (quote ducpel-restart-level)) (define-key map "F" (quote ducpel-load-level-from-file)) (define-key map "L" (quote ducpel-goto-level)) (define-key map "N" (quote ducpel-next-level)) (define-key map "P" (quote ducpel-previous-level)) (define-key map "u" (quote ducpel-undo)) (define-key map "" (quote ducpel-undo)) (define-key map [(control 47)] (quote ducpel-undo)) (define-key map "	" (quote ducpel-next-man)) (define-key map "	" (quote ducpel-previous-man)) (define-key map [backtab] (quote ducpel-previous-man)) (define-key map " " (quote ducpel-action)) (define-key map "b" (quote ducpel-move-left)) (define-key map "f" (quote ducpel-move-right)) (define-key map "p" (quote ducpel-move-up)) (define-key map "n" (quote ducpel-move-down)) (define-key map [left] (quote ducpel-move-left)) (define-key map [right] (quote ducpel-move-right)) (define-key map [up] (quote ducpel-move-up)) (define-key map [down] (quote ducpel-move-down)) (define-key map "rc" (quote ducpel-replay-current)) (define-key map "rf" (quote ducpel-replay-from-file)) (define-key map "rS" (quote ducpel-replay-solution)) (define-key map "rs" (quote ducpel-save-replay)) map)) nil [41798 43220])
            ("define-derived-mode" code nil nil [43222 43556])
            ("ducpel" function (:user-visible-flag t) nil [43573 43811])
            ("ducpel" package nil nil [43813 43830]))          
      :file "ducpel.el"
      :pointmax 43856
      :fsize 43855
      :lastmodtime '(22437 58282 833186 878000)
      :unmatched-syntax nil))
  :file "!home!lyra!.emacs.d!elpa!ducpel-20140418.2216!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
