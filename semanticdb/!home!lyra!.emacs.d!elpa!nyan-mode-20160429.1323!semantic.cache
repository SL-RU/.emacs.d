;; Object nyan-mode-20160429.1323/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "nyan-mode-20160429.1323/"
  :tables
  (list
    (semanticdb-table "nyan-mode.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1980 1993])
            ("+nyan-directory+" variable
               (:constant-flag t
                :default-value (file-name-directory (or load-file-name buffer-file-name)))
                nil [1996 2082])
            ("+nyan-cat-size+" variable
               (:constant-flag t
                :default-value 3)
                nil [2084 2112])
            ("+nyan-cat-image+" variable
               (:constant-flag t
                :default-value (concat +nyan-directory+ "img/nyan.xpm"))
                nil [2114 2182])
            ("+nyan-rainbow-image+" variable
               (:constant-flag t
                :default-value (concat +nyan-directory+ "img/rainbow.xpm"))
                nil [2183 2258])
            ("+nyan-outerspace-image+" variable
               (:constant-flag t
                :default-value (concat +nyan-directory+ "img/outerspace.xpm"))
                nil [2259 2340])
            ("+nyan-music+" variable
               (:constant-flag t
                :default-value (concat +nyan-directory+ "mus/nyanlooped.mp3"))
                nil [2342 2412])
            ("+nyan-modeline-help-string+" variable
               (:constant-flag t
                :default-value "Nyanyanya!
mouse-1: Scroll buffer position")
                nil [2414 2498])
            ("nyan-old-car-mode-line-position" variable nil nil [2500 2544])
            ("nyan" customgroup (:user-visible-flag t) nil [2546 2623])
            ("nyan-refresh" function nil nil [2625 2826])
            ("nyan-animation-frame-interval" variable (:default-value 0.2) nil [2828 3017])
            ("nyan-animation-timer" variable nil nil [3019 3052])
            ("nyan-start-animation" function nil nil [3054 3397])
            ("nyan-stop-animation" function nil nil [3399 3620])
            ("nyan-music-process" variable nil nil [3664 3695])
            ("nyan-start-music" function nil nil [3697 3900])
            ("nyan-stop-music" function nil nil [3902 4046])
            ("nyan-minimum-window-width" variable (:default-value 64) nil [4048 4364])
            ("nyan-wavy-trail" variable nil nil [4408 4678])
            ("nyan-bar-length" variable (:default-value 32) nil [4680 4927])
            ("nyan-animate-nyancat" variable nil nil [4929 5293])
            ("nyan-cat-face-number" variable (:default-value 1) nil [5295 5372])
            ("nyan-cat-image" variable (:default-value (if (image-type-available-p (quote xpm)) (create-image +nyan-cat-image+ (quote xpm) nil :ascent (quote center)))) nil [5419 5561])
            ("nyan-animation-frames" variable (:default-value (if (image-type-available-p (quote xpm)) (mapcar (lambda (id) (create-image (concat +nyan-directory+ (format "img/nyan-frame-%d.xpm" id)) (quote xpm) nil :ascent 95)) (quote (1 2 3 4 5 6))))) nil [5563 5941])
            ("nyan-current-frame" variable nil nil [5942 5971])
            ("+nyan-catface+" variable
               (:constant-flag t
                :default-value [["[]*" "[]#"] ["(*^ｰﾟ)" "( ^ｰ^)" "(^ｰ^ )" "(ﾟｰ^*)"] ["(´ω｀三 )" "( ´ω三｀ )" "( ´三ω｀ )" "( 三´ω｀)" "( 三´ω｀)" "( ´三ω｀ )" "( ´ω三｀ )" "(´ω｀三 )"] ["(´д｀;)" "( ´д`;)" "( ;´д`)" "(;´д` )"] ["(」・ω・)」" "(／・ω・)／" "(」・ω・)」" "(／・ω・)／" "(」・ω・)」" "(／・ω・)／" "(」・ω・)」" "＼(・ω・)／"] ["(＞ワ＜三　　　)" "(　＞ワ三＜　　)" "(　　＞三ワ＜　)" "(　　　三＞ワ＜)" "(　　＞三ワ＜　)" "(　＞ワ三＜　　)"]])
                nil [5973 6600])
            ("nyan-toggle-wavy-trail" function (:user-visible-flag t) nil [6602 6770])
            ("nyan-swich-anim-frame" function nil nil [6772 6883])
            ("nyan-get-anim-frame" function nil nil [6885 7015])
            ("nyan-wavy-rainbow-ascent" function (:arguments ("number")) nil [7017 7293])
            ("nyan-number-of-rainbows" function nil nil [7295 7578])
            ("nyan-catface" function nil nil [7580 7646])
            ("nyan-catface-index" function nil nil [7648 7975])
            ("nyan-scroll-buffer" function (:arguments ("percentage" "buffer")) nil [7977 8121])
            ("nyan-add-scroll-handler" function (:arguments ("string" "percentage" "buffer")) nil [8123 8399])
            ("nyan-create" function nil nil [8401 10662])
            ("define-minor-mode" code nil nil [10679 11234])
            ("nyan-mode" package nil nil [11237 11257]))          
      :file "nyan-mode.el"
      :pointmax 11286
      :fsize 11511
      :lastmodtime '(22373 3118 991424 720000)
      :unmatched-syntax '((close-paren 1993 . 1994) (symbol 1962 . 1979) (open-paren 1961 . 1962))))
  :file "!home!lyra!.emacs.d!elpa!nyan-mode-20160429.1323!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
