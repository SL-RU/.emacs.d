;; Object .emacs.d/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file ".emacs.d/"
  :tables
  (list
    (semanticdb-table "ede-projects.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("anonymous" code nil nil [82 85]))          
      :file "ede-projects.el"
      :pointmax 86
      :fsize 85
      :lastmodtime '(22488 8191 880929 534000)
      :unmatched-syntax nil)
    (semanticdb-table "init.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("package" include nil nil [1 19])
            ("add-to-list" code nil nil [56 143])
            ("when" code nil nil [248 413])
            ("load-file" code nil nil [415 485])
            ("load-file" code nil nil [486 565])
            ("package-initialize" code nil nil [567 587])
            ("load-theme" code nil nil [633 656])
            ("tool-bar-mode" code nil nil [657 675])
            ("menu-bar-mode" code nil nil [676 694])
            ("add-to-list" code nil nil [695 747])
            ("set-face-attribute" code nil nil [748 793])
            ("global-linum-mode" code nil nil [794 815])
            ("set-terminal-coding-system" code nil nil [849 884])
            ("set-keyboard-coding-system" code nil nil [885 920])
            ("set-language-environment" code nil nil [921 955])
            ("prefer-coding-system" code nil nil [956 985])
            ("show-paren-mode" code nil nil [987 1004])
            ("nyan-mode" include nil nil [1021 1041])
            ("nyan-mode" code nil nil [1042 1055])
            ("switch-window" include nil nil [1057 1081])
            ("global-set-key" code nil nil [1082 1127])
            ("diredp-toggle-find-file-reuse-dir" code nil nil [1129 1166])
            ("undo-tree" include nil nil [1178 1198])
            ("global-undo-tree-mode" code nil nil [1199 1222])
            ("drag-stuff" include nil nil [1225 1246])
            ("drag-stuff-global-mode" code nil nil [1247 1271])
            ("tramp" include nil nil [1273 1289])
            ("sudo-edit" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [1291 1746])
            ("global-set-key" code nil nil [1748 1792])
            ("elpy" include nil nil [1795 1810])
            ("elpy-enable" code nil nil [1811 1824])
            ("setq" code nil nil [1825 1865])
            ("auto-complete" include nil nil [1868 1892])
            ("auto-complete-config" include nil nil [1931 1962])
            ("ac-config-default" code nil nil [1963 1982])
            ("yasnippet" include nil nil [2012 2032])
            ("yas-global-mode" code nil nil [2033 2052])
            ("flycheck" include nil nil [2054 2073])
            ("global-flycheck-mode" code nil nil [2074 2098])
            ("setq" code nil nil [2100 2129])
            ("multiple-cursors" include nil nil [2131 2158])
            ("global-set-key" code nil nil [2159 2210])
            ("global-set-key" code nil nil [2211 2263])
            ("global-set-key" code nil nil [2264 2320])
            ("global-set-key" code nil nil [2321 2376])
            ("load-file" code nil nil [2379 2435])
            ("load-file" code nil nil [2436 2491])
            ("load-file" code nil nil [2493 2551])
            ("stm32-load-all-projects" code nil nil [2571 2596])
            ("load-file" code nil nil [2598 2646])
            ("setq" code nil nil [2648 2708])
            ("load" code nil nil [2709 2727]))          
      :file "init.el"
      :pointmax 2728
      :fsize 2727
      :lastmodtime '(22488 8187 744929 618000)
      :unmatched-syntax nil)
    (semanticdb-table "helm-init.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("helm" include nil nil [1 16])
            ("helm-config" include nil nil [17 39])
            ("global-set-key" code nil nil [254 305])
            ("global-unset-key" code nil nil [306 338])
            ("define-key" code nil nil [340 401])
            ("define-key" code nil nil [402 469])
            ("define-key" code nil nil [508 578])
            ("define-key" code nil nil [579 644])
            ("define-key" code nil nil [674 728])
            ("global-set-key" code nil nil [761 800])
            ("global-set-key" code nil nil [801 859])
            ("global-set-key" code nil nil [860 909])
            ("global-set-key" code nil nil [910 959])
            ("global-set-key" code nil nil [960 1009])
            ("global-set-key" code nil nil [1010 1076])
            ("define-key" code nil nil [1078 1148])
            ("define-key" code nil nil [1149 1219])
            ("when" code nil nil [1223 1296])
            ("setq" code nil nil [1324 1820])
            ("helm-swoop" include nil nil [1835 1856])
            ("global-set-key" code nil nil [1857 1897])
            ("helm-gtags" include nil nil [1908 1929])
            ("setq" code nil nil [1930 2122])
            ("add-hook" code nil nil [2123 2167])
            ("add-hook" code nil nil [2168 2213])
            ("add-hook" code nil nil [2214 2254])
            ("add-hook" code nil nil [2255 2297])
            ("add-hook" code nil nil [2298 2340])
            ("define-key" code nil nil [2341 2423])
            ("define-key" code nil nil [2424 2487])
            ("define-key" code nil nil [2488 2549])
            ("define-key" code nil nil [2550 2616])
            ("define-key" code nil nil [2617 2692])
            ("define-key" code nil nil [2693 2764])
            ("function-args" include nil nil [2766 2790])
            ("fa-config-default" code nil nil [2791 2810])
            ("helm-mode" code nil nil [2812 2825]))          
      :file "helm-init.el"
      :pointmax 2826
      :fsize 2825
      :lastmodtime '(22437 63201 257357 793000)
      :unmatched-syntax nil)
    (semanticdb-table "ede-init.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("ede" include nil nil [30 44])
            ("ede/source" include nil nil [153 174])
            ("ede/base" include nil nil [175 194])
            ("ede/auto" include nil nil [195 214])
            ("ede/proj" include nil nil [215 234])
            ("ede/proj-archive" include nil nil [235 262])
            ("ede/proj-aux" include nil nil [263 286])
            ("ede/proj-comp" include nil nil [287 311])
            ("ede/proj-elisp" include nil nil [312 337])
            ("ede/proj-info" include nil nil [338 362])
            ("ede/proj-misc" include nil nil [363 387])
            ("ede/proj-obj" include nil nil [388 411])
            ("ede/proj-shared" include nil nil [466 492])
            ("ede/cpp-root" include nil nil [493 516])
            ("global-semanticdb-minor-mode" code nil nil [519 551])
            ("global-semantic-idle-scheduler-mode" code nil nil [552 591])
            ("global-semantic-stickyfunc-mode" code nil nil [592 627])
            ("global-semantic-decoration-mode" code nil nil [628 663])
            ("ede-enable-generic-projects" code nil nil [664 693])
            ("global-semantic-idle-scheduler-mode" code nil nil [694 731])
            ("global-semantic-highlight-func-mode" code nil nil [773 810])
            ("global-semantic-show-unmatched-syntax-mode" code nil nil [811 855])
            ("global-semantic-tag-folding-mode" code nil nil [856 892])
            ("semantic-mode" code nil nil [894 911])
            ("global-ede-mode" code nil nil [912 931])
            ("ede-enable-generic-projects" code nil nil [933 962])
            ("my:add-semantic-to-autocomplete" function nil nil [964 1061])
            ("add-hook" code nil nil [1062 1125])
            ("add-hook" code nil nil [1126 1182])
            ("add-hook" code nil nil [1183 1241])
            ("ede-generic-makefile-project" type
               (:superclasses "ede-generic-project"
                :members 
                  ( ("buildfile" variable (:default-value "Makefile") nil nil))                  
                :type "class")
                nil [1258 1395])
            ("ede-generic-setup-configuration" function
               (:parent "ede-generic-makefile-project"
                :arguments ("proj" "config"))
                nil [1397 1597])
            ("dennis-flycheck-get-ede-includes" function (:user-visible-flag t) nil [1600 2384])
            ("add-hook" code nil nil [2386 2450]))          
      :file "ede-init.el"
      :pointmax 2451
      :fsize 2450
      :lastmodtime '(22488 6810 632957 719000)
      :unmatched-syntax nil)
    (semanticdb-table "custom.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("custom-set-variables" code nil nil [1 417])
            ("custom-set-faces" code nil nil [418 657]))          
      :file "custom.el"
      :pointmax 658
      :fsize 657
      :lastmodtime '(22487 7898 571038 46000)
      :unmatched-syntax nil)
    (semanticdb-table "flycheck-cedet.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("dash" include nil nil [1025 1040])
            ("flycheck" include nil nil [1041 1060])
            ("flycheck-cedet-get-ede-cpp-project" function (:arguments ("file")) nil [1089 1431])
            ("flycheck-cedet-get-ede-cpp-project-includes" function (:arguments ("project")) nil [1433 1759])
            ("flycheck-cedet-get-cpp-includes" function (:arguments ("option-name" "file")) nil [1784 2289])
            ("flycheck-cedet-get-cpp-definitions" function (:arguments ("option-name" "file")) nil [2291 2985])
            ("flycheck-cedet" package nil nil [2988 3013]))          
      :file "flycheck-cedet.el"
      :pointmax 3046
      :fsize 3045
      :lastmodtime '(22488 4754 616999 674000)
      :unmatched-syntax nil)
    (semanticdb-table "c.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cc-mode" include nil nil [1 19])
            ("setq" code nil nil [22 75])
            ("cl" include nil nil [78 91])
            ("c-add-style" code nil nil [126 445])
            ("my-c++-mode-hook" function nil nil [447 598])
            ("add-hook" code nil nil [600 643])
            ("cc-mode" include nil nil [645 663])
            ("semantic" include nil nil [664 683])
            ("semantic/ia" include nil nil [684 706])
            ("semantic/bovine/gcc" include nil nil [707 737])
            ("alexott/cedet-hook" function nil nil [739 875])
            ("add-hook" code nil nil [877 927])
            ("add-hook" code nil nil [928 971])
            ("add-hook" code nil nil [972 1017]))          
      :file "c.el"
      :pointmax 1018
      :fsize 1017
      :lastmodtime '(22488 6142 572971 351000)
      :unmatched-syntax nil))
  :file "!home!lyra!.emacs.d!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
