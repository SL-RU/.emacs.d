;; Object company-c-headers-20150801.901/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "company-c-headers-20150801.901/"
  :tables
  (list
    (semanticdb-table "company-c-headers.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("company" include nil nil [1672 1690])
            ("rx" include nil nil [1691 1704])
            ("cl-lib" include nil nil [1705 1722])
            ("company-c-headers" customgroup (:user-visible-flag t) nil [1724 1822])
            ("company-c-headers-path-system" variable (:default-value (quote ("/usr/include/" "/usr/local/include/"))) nil [1824 2130])
            ("company-c-headers-path-user" variable (:default-value (quote ("."))) nil [2132 2476])
            ("company-c-headers-include-declaration" variable (:default-value (rx line-start "#" (zero-or-more blank) (or "include" "import") (one-or-more blank) (submatch (in "<\"") (zero-or-more (not (in ">\"")))))) nil [2478 2740])
            ("company-c-headers-modes" variable (:default-value (\` ((c-mode \, (rx ".h" line-end)) (c++-mode \, (rx (or (: line-start (one-or-more (in "A-Za-z0-9_"))) (or ".h" ".hpp" ".hxx" ".hh")) line-end)) (objc-mode \, (rx ".h" line-end))))) nil [2742 3103])
            ("call-if-function" function (:arguments ("path")) nil [3105 3292])
            ("company-c-headers--candidates-for" function (:arguments ("prefix" "dir")) nil [3294 4843])
            ("company-c-headers--candidates" function (:arguments ("prefix")) nil [4845 5534])
            ("company-c-headers--meta" function (:arguments ("candidate")) nil [5536 5706])
            ("company-c-headers--location" function (:arguments ("candidate")) nil [5708 5967])
            ("company-c-headers" function
               (:user-visible-flag t
                :arguments ("command" "arg" "ignored"))
                nil [5984 7178])
            ("company-c-headers" package nil nil [7180 7208]))          
      :file "company-c-headers.el"
      :pointmax 7245
      :fsize 7244
      :lastmodtime '(22386 44795 508528 955000)
      :unmatched-syntax nil))
  :file "!home!lyra!.emacs.d!elpa!company-c-headers-20150801.901!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
