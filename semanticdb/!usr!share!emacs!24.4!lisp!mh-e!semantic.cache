;; Object mh-e/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mh-e/"
  :tables
  (list
    (semanticdb-table "mh-compat.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("mh-acros" include nil nil [1476 1495])
            ("mh-do-in-gnu-emacs" code nil nil [1497 1551])
            ("mh-do-in-xemacs" code nil nil [1553 2195])
            ("defun-mh" code nil nil [2197 2508])
            ("defalias" code nil nil [2525 2622])
            ("defalias" code nil nil [2661 2734])
            ("mh-display-color-cells" function (:arguments ("display")) nil [2736 3311])
            ("mh-display-completion-list" function (:arguments ("completions" "common-substring")) nil [3313 4160])
            ("mh-face-foreground" function (:arguments ("face" "frame" "inherit")) nil [4162 4609])
            ("mh-face-background" function (:arguments ("face" "frame" "inherit")) nil [4611 5050])
            ("defun-mh" code nil nil [5052 5236])
            ("defun-mh" code nil nil [5238 9319])
            ("defun-mh" code nil nil [9321 9515])
            ("defalias" code nil nil [9532 9661])
            ("defalias" code nil nil [9678 9789])
            ("mh-require" code nil nil [9791 9821])
            ("defun-mh" code nil nil [9822 10018])
            ("mh-define-obsolete-variable-alias" function (:arguments ("obsolete-name" "current-name" "when" "docstring")) nil [10020 10599])
            ("mh-make-obsolete-variable" function (:arguments ("obsolete-name" "current-name" "when" "access-type")) nil [10601 11139])
            ("mh-make-obsolete-variable" function (:arguments ("obsolete-name" "current-name" "when" "access-type")) nil [11141 11854])
            ("defun-mh" code nil nil [11856 12267])
            ("defun-mh" code nil nil [12269 12717])
            ("defun-mh" code nil nil [12719 12944])
            ("if" code nil nil [13016 13452])
            ("defun-mh" code nil nil [13454 13920])
            ("defun-mh" code nil nil [13922 14262])
            ("defun-mh" code nil nil [14264 14643])
            ("mh-write-file-functions" function nil nil [14645 15040])
            ("mh-compat" package nil nil [15059 15079]))          
      :file "mh-compat.el"
      :pointmax 15218
      :fsize 15217
      :lastmodtime '(21574 54278 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "mh-acros.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1562 1575])
            ("mh-require-cl" function nil nil [1617 2156])
            ("mh-do-in-gnu-emacs" function (:arguments ("body")) nil [2176 2320])
            ("put" code nil nil [2321 2371])
            ("mh-do-in-xemacs" function (:arguments ("body")) nil [2391 2527])
            ("put" code nil nil [2528 2575])
            ("mh-funcall-if-exists" function (:arguments ("function" "args")) nil [2595 2800])
            ("defun-mh" function (:arguments ("name" "function" "arg-list" "body")) nil [2820 3154])
            ("put" code nil nil [3155 3199])
            ("put" code nil nil [3200 3233])
            ("defmacro-mh" function (:arguments ("name" "macro" "arg-list" "body")) nil [3253 3572])
            ("put" code nil nil [3573 3620])
            ("put" code nil nil [3621 3657])
            ("mh-make-local-hook" function (:arguments ("hook")) nil [3699 3984])
            ("mh-mark-active-p" function (:arguments ("check-transient-mark-mode-flag")) nil [4004 4654])
            ("mh-do-in-xemacs" code nil nil [4675 4736])
            ("mh-defstruct" function (:arguments ("name-spec" "fields")) nil [4756 6489])
            ("with-mh-folder-updating" function (:arguments ("save-modification-flag" "body")) nil [6509 7392])
            ("put" code nil nil [7393 7448])
            ("mh-in-show-buffer" function (:arguments ("show-buffer" "body")) nil [7468 8079])
            ("put" code nil nil [8080 8129])
            ("mh-do-at-event-location" function (:arguments ("event" "body")) nil [8149 9729])
            ("put" code nil nil [9730 9785])
            ("mh-seq-msgs" function (:arguments ("sequence")) nil [9834 9930])
            ("mh-iterate-on-messages-in-region" function (:arguments ("var" "begin" "end" "body")) nil [9950 10671])
            ("put" code nil nil [10672 10736])
            ("mh-iterate-on-range" function (:arguments ("var" "range" "body")) nil [10756 12577])
            ("put" code nil nil [12578 12629])
            ("mh-acros" package nil nil [12631 12650]))          
      :file "mh-acros.el"
      :pointmax 12788
      :fsize 12787
      :lastmodtime '(21574 54278 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "mh-gnus.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("mh-e" include nil nil [992 1007])
            ("mh-require" code nil nil [1009 1038])
            ("mh-require" code nil nil [1039 1068])
            ("mh-require" code nil nil [1069 1098])
            ("mh-require" code nil nil [1099 1126])
            ("mh-require" code nil nil [1127 1150])
            ("defun-mh" code nil nil [1225 1507])
            ("defun-mh" code nil nil [1548 1762])
            ("defun-mh" code nil nil [1803 2041])
            ("defun-mh" code nil nil [2080 2451])
            ("defun-mh" code nil nil [2566 2659])
            ("defmacro-mh" code nil nil [2695 2850])
            ("defun-mh" code nil nil [2889 3234])
            ("defun-mh" code nil nil [3273 3650])
            ("defun-mh" code nil nil [3652 3852])
            ("defun-mh" code nil nil [3854 3968])
            ("defun-mh" code nil nil [3970 4099])
            ("defun-mh" code nil nil [4132 4556])
            ("mh-mm-save-part" function (:arguments ("handle" "prompt")) nil [4827 5715])
            ("mh-mm-text-html-renderer" function nil nil [5717 5968])
            ("mh-gnus" package nil nil [5970 5988]))          
      :file "mh-gnus.el"
      :pointmax 6151
      :fsize 6150
      :lastmodtime '(21574 54278 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!24.4!lisp!mh-e!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
